{"remainingRequest":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/views/Detail.vue?vue&type=style&index=0&id=40f4caea&scoped=true&lang=scss&","dependencies":[{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/views/Detail.vue","mtime":1585021583629},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/css-loader/dist/cjs.js","mtime":1584931130604},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1584931133236},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/postcss-loader/src/index.js","mtime":1584931132284},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/sass-loader/dist/cjs.js","mtime":1584931132739},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/cache-loader/dist/cjs.js","mtime":1584931130054},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/vue-loader/lib/index.js","mtime":1584931133236}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiLi4vYXNzZXRzL2Nzcy9taXhpbiI7CgouZGV0YWlsIHsKICBAaW5jbHVkZSBiZ19zdWJfY29sb3IoKTsKICBwb3NpdGlvbjogZml4ZWQ7CiAgdG9wOiAwOwogIGxlZnQ6IDA7CiAgcmlnaHQ6IDA7CiAgYm90dG9tOiAwOwogIC5ib3R0b20gewogICAgcG9zaXRpb246IGZpeGVkOwogICAgdG9wOiA1MDBweDsKICAgIGxlZnQ6IDA7CiAgICByaWdodDogMDsKICAgIGJvdHRvbTogMDsKICB9Cn0K"},{"version":3,"sources":["Detail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Detail.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"detail\">\n    <SubHeader :title=\"playlist.name\"></SubHeader>\n    <DetailTop :path=\"playlist.coverImgUrl\" ref=\"headerImg\"></DetailTop>\n    <div class=\"bottom\">\n      <ScrollView ref=\"scrollview\">\n        <DetailBottom :playlist=\"playlist.tracks\"></DetailBottom>\n      </ScrollView>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SubHeader from \"../components/detail/SubHeader\";\nimport DetailTop from \"../components/detail/DetailTop\";\nimport DetailBottom from \"../components/detail/DetailBottom\";\nimport ScrollView from \"../components/ScrollView\";\nimport { getPlayList, getAlbumDetail } from \"../api/index\";\n\nexport default {\n  name: \"Detail\",\n  components: {\n    SubHeader,\n    DetailTop,\n    DetailBottom,\n    ScrollView\n  },\n  data() {\n    return {\n      playlist: {}\n    };\n  },\n\n  created() {\n    if (this.$route.params.type === \"personalized\") {\n      // 获取歌单详情\n      getPlayList({ id: this.$route.params.id })\n        .then(data => {\n          this.playlist = data.playlist;\n        })\n        .catch(error => {\n          console.log(error);\n        });\n\n    } else if (this.$route.params.type === \"album\") {\n      // 获取专辑详情\n      getAlbumDetail({ id: this.$route.params.id })\n        .then(data => {\n          this.playlist = {\n            name: data.album.name,\n            coverImgUrl: data.album.picUrl,\n            tracks: data.album.songs\n          }\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  },\n\n  mounted() {\n    let defaultHeight = this.$refs.headerImg.$el.offsetHeight;\n    this.$refs.scrollview.scrolling(offsetY => {\n      if (offsetY < 0) {\n        let opacity =  Math.abs(offsetY) / defaultHeight;\n        // 高斯模糊在移动端非常消耗性能，不建议在移动端使用\n        // this.$refs.headerImg.$el.style.filter = `blur(${blur}px)`;\n        this.$refs.headerImg.changeMaskAlpha(opacity)\n      } else {\n        let scale = 1 + offsetY / defaultHeight;\n        this.$refs.headerImg.$el.style.transform = `scale(${scale})`;\n      }\n    });\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../assets/css/mixin\";\n\n.detail {\n  @include bg_sub_color();\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  .bottom {\n    position: fixed;\n    top: 500px;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n}\n</style>\n"]}]}