{"remainingRequest":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/views/Player.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/views/Player.vue","mtime":1585639793063},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/cache-loader/dist/cjs.js","mtime":1584931130054},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/babel-loader/lib/index.js","mtime":1584931129970},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/cache-loader/dist/cjs.js","mtime":1584931130054},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/vue-loader/lib/index.js","mtime":1584931133236}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBOb3JtYWxQbGF5ZXIgZnJvbSAiLi4vY29tcG9uZW50cy9wbGF5ZXIvTm9ybWFsUGxheWVyIgppbXBvcnQgTWluaVBsYXllciBmcm9tICcuLi9jb21wb25lbnRzL3BsYXllci9NaW5pUGxheWVyJwppbXBvcnQgTGlzdFBsYXllciBmcm9tICcuLi9jb21wb25lbnRzL3BsYXllci9MaXN0UGxheWVyJwppbXBvcnQgeyBtYXBHZXR0ZXJzLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCcKaW1wb3J0IG1vZGUgZnJvbSAnLi4vc3RvcmUvbW9kZVR5cGUnCmltcG9ydCB7IGdldFJhbmRvbUludEluY2x1c2l2ZSB9IGZyb20gJy4uL3Rvb2xzL3Rvb2wnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlBsYXllciIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRvdGFsVGltZTogMCwKICAgICAgY3VycmVudFRpbWU6IDAKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIE5vcm1hbFBsYXllciwKICAgIE1pbmlQbGF5ZXIsCiAgICBMaXN0UGxheWVyCiAgfSwKICBtZXRob2RzOiB7CiAgICAuLi5tYXBBY3Rpb25zKFsKICAgICAgJ3NldEN1cnJlbnRJbmRleCcsCiAgICAgICdzZXRGYXZvcml0ZUxpc3QnLAogICAgICAnc2V0SGlzdG9yeVNvbmcnLAogICAgICAnc2V0SGlzdG9yeUxpc3QnCiAgICBdKSwKCiAgICB0aW1ldXBkYXRlIChlKSB7CiAgICAgIHRoaXMuY3VycmVudFRpbWUgPSBlLnRhcmdldC5jdXJyZW50VGltZQogICAgfSwKCiAgICBwbGF5ZW5kICgpIHsKICAgICAgaWYgKHRoaXMubW9kZVR5cGUgPT09IG1vZGUubG9vcCkgewogICAgICAgIHRoaXMuc2V0Q3VycmVudEluZGV4KHRoaXMuY3VycmVudEluZGV4ICsgMSkKICAgICAgfWVsc2UgaWYgKHRoaXMubW9kZVR5cGUgPT09IG1vZGUub25lKSB7CiAgICAgICAgdGhpcy4kcmVmcy5hdWRpby5wbGF5KCkKICAgICAgfWVsc2UgaWYgKHRoaXMubW9kZVR5cGUgPT09IG1vZGUucmFuZG9tKSB7CiAgICAgICAgbGV0IGluZGV4ID0gZ2V0UmFuZG9tSW50SW5jbHVzaXZlKDAsIHRoaXMuc29uZ3MubGVuZ3RoIC0gMSkKICAgICAgICB0aGlzLnNldEN1cnJlbnRJbmRleChpbmRleCkKICAgICAgfQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoWwogICAgICAnY3VycmVudFNvbmcnLAogICAgICAnaXNQbGF5aW5nJywKICAgICAgJ2N1cnJlbnRJbmRleCcsCiAgICAgICdjdXJyZW50UGxheVRpbWUnLAogICAgICAnbW9kZVR5cGUnLAogICAgICAnc29uZ3MnLAogICAgICAnZmF2b3JpdGVMaXN0JywKICAgICAgJ2hpc3RvcnlMaXN0JwogICAgXSkKICB9LAoKICB3YXRjaDogewogICAgaXNQbGF5aW5nKG5ld1ZhbHVlLCBvbGRWYWx1ZSkgewogICAgICBpZiAobmV3VmFsdWUpIHsKICAgICAgICB0aGlzLnNldEhpc3RvcnlTb25nKHRoaXMuY3VycmVudFNvbmcpCiAgICAgICAgdGhpcy4kcmVmcy5hdWRpby5wbGF5KCkKICAgICAgfWVsc2UgewogICAgICAgIHRoaXMuJHJlZnMuYXVkaW8ucGF1c2UoKQogICAgICB9CiAgICB9LAoKICAgIGN1cnJlbnRJbmRleChuZXdWYWx1ZSwgb2xkVmFsdWUpIHsKICAgICAgLy8g5ZyoaU9T57O757uf5Lit77yM5LiN5Lya6Ieq5Yqo5Yqg6L295q2M5puy77yM5omA5Lulb25jYW5wbGF55rC46L+c6YO95LiN5Lya6KKr5omn6KGMLAogICAgICAvLyDkvYbmmK/lnKhwY+err+WSjEFuZHJpb2Tnq6/lj6/ku6XmiafooYzvvIzmiYDku6XpgJrov4dvbmR1cmF0aW9uY2hhbmdl55uR5ZCs5pe26ZW/55qE5pS55Y+Y5p2l6Kej5YazCiAgICAgIHRoaXMuJHJlZnMuYXVkaW8ub25kdXJhdGlvbmNoYW5nZSA9ICgpID0+IHsKICAgICAgICB0aGlzLnRvdGFsVGltZSA9IHRoaXMuJHJlZnMuYXVkaW8uZHVyYXRpb24KICAgICAgICBpZiAodGhpcy5pc1BsYXlpbmcpIHsKICAgICAgICAgIHRoaXMuc2V0SGlzdG9yeVNvbmcodGhpcy5jdXJyZW50U29uZykKICAgICAgICAgIHRoaXMuJHJlZnMuYXVkaW8ucGxheSgpCiAgICAgICAgfWVsc2UgewogICAgICAgICAgdGhpcy4kcmVmcy5hdWRpby5wYXVzZSgpCiAgICAgICAgfQogICAgICB9CiAgICB9LAoKICAgIGN1cnJlbnRQbGF5VGltZSAobmV3VmFsdWUsIG9sZFZhbHVlKSB7CiAgICAgIHRoaXMuJHJlZnMuYXVkaW8uY3VycmVudFRpbWUgPSBuZXdWYWx1ZQogICAgfSwKCiAgICBmYXZvcml0ZUxpc3QobmV3VmFsdWUsIG9sZFZhbHVlKSB7CiAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnZmF2b3JpdGVMaXN0JywgSlNPTi5zdHJpbmdpZnkobmV3VmFsdWUpKQogICAgfSwKCiAgICBoaXN0b3J5TGlzdChuZXdWYWx1ZSwgb2xkVmFsdWUpIHsKICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdoaXN0b3J5TGlzdCcsIEpTT04uc3RyaW5naWZ5KG5ld1ZhbHVlKSkKICAgIH0sCiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIGxldCBsaXN0ID0gSlNPTi5wYXJzZSh3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2Zhdm9yaXRlTGlzdCcpKQogICAgaWYgKGxpc3QgPT09IG51bGwpIHsKICAgICAgcmV0dXJuCiAgICB9CiAgICB0aGlzLnNldEZhdm9yaXRlTGlzdChsaXN0KQoKICAgIGxldCBoaXN0b3J5bGlzdCA9IEpTT04ucGFyc2Uod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdoaXN0b3J5TGlzdCcpKQogICAgaWYgKGxpc3QgPT09IG51bGwpIHsKICAgICAgcmV0dXJuCiAgICB9CiAgICB0aGlzLnNldEhpc3RvcnlMaXN0KGhpc3RvcnlsaXN0KQogIH0sCgogIG1vdW50ZWQoKSB7CiAgICB0aGlzLiRyZWZzLmF1ZGlvLm9uZHVyYXRpb25jaGFuZ2UgPSAoKSA9PiB7CiAgICAgIHRoaXMudG90YWxUaW1lID0gdGhpcy4kcmVmcy5hdWRpby5kdXJhdGlvbgogICAgfQogIH0sCgp9Owo="},{"version":3,"sources":["Player.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"Player.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"player\">\n    <NormalPlayer :totalTime=\"totalTime\" :currentTime=\"currentTime\"></NormalPlayer>\n    <MiniPlayer></MiniPlayer>\n    <ListPlayer ref=\"listPlayer\"></ListPlayer>\n    <audio :src=\"currentSong.url\" ref=\"audio\" @timeupdate=\"timeupdate\" @ended=\"playend\"></audio>\n  </div>\n</template>\n\n<script>\nimport NormalPlayer from \"../components/player/NormalPlayer\"\nimport MiniPlayer from '../components/player/MiniPlayer'\nimport ListPlayer from '../components/player/ListPlayer'\nimport { mapGetters, mapActions } from 'vuex'\nimport mode from '../store/modeType'\nimport { getRandomIntInclusive } from '../tools/tool'\n\nexport default {\n  name: \"Player\",\n  data() {\n    return {\n      totalTime: 0,\n      currentTime: 0\n    }\n  },\n  components: {\n    NormalPlayer,\n    MiniPlayer,\n    ListPlayer\n  },\n  methods: {\n    ...mapActions([\n      'setCurrentIndex',\n      'setFavoriteList',\n      'setHistorySong',\n      'setHistoryList'\n    ]),\n\n    timeupdate (e) {\n      this.currentTime = e.target.currentTime\n    },\n\n    playend () {\n      if (this.modeType === mode.loop) {\n        this.setCurrentIndex(this.currentIndex + 1)\n      }else if (this.modeType === mode.one) {\n        this.$refs.audio.play()\n      }else if (this.modeType === mode.random) {\n        let index = getRandomIntInclusive(0, this.songs.length - 1)\n        this.setCurrentIndex(index)\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'currentSong',\n      'isPlaying',\n      'currentIndex',\n      'currentPlayTime',\n      'modeType',\n      'songs',\n      'favoriteList',\n      'historyList'\n    ])\n  },\n\n  watch: {\n    isPlaying(newValue, oldValue) {\n      if (newValue) {\n        this.setHistorySong(this.currentSong)\n        this.$refs.audio.play()\n      }else {\n        this.$refs.audio.pause()\n      }\n    },\n\n    currentIndex(newValue, oldValue) {\n      // 在iOS系统中，不会自动加载歌曲，所以oncanplay永远都不会被执行,\n      // 但是在pc端和Andriod端可以执行，所以通过ondurationchange监听时长的改变来解决\n      this.$refs.audio.ondurationchange = () => {\n        this.totalTime = this.$refs.audio.duration\n        if (this.isPlaying) {\n          this.setHistorySong(this.currentSong)\n          this.$refs.audio.play()\n        }else {\n          this.$refs.audio.pause()\n        }\n      }\n    },\n\n    currentPlayTime (newValue, oldValue) {\n      this.$refs.audio.currentTime = newValue\n    },\n\n    favoriteList(newValue, oldValue) {\n      window.localStorage.setItem('favoriteList', JSON.stringify(newValue))\n    },\n\n    historyList(newValue, oldValue) {\n      window.localStorage.setItem('historyList', JSON.stringify(newValue))\n    },\n  },\n\n  created() {\n    let list = JSON.parse(window.localStorage.getItem('favoriteList'))\n    if (list === null) {\n      return\n    }\n    this.setFavoriteList(list)\n\n    let historylist = JSON.parse(window.localStorage.getItem('historyList'))\n    if (list === null) {\n      return\n    }\n    this.setHistoryList(historylist)\n  },\n\n  mounted() {\n    this.$refs.audio.ondurationchange = () => {\n      this.totalTime = this.$refs.audio.duration\n    }\n  },\n\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"]}]}