{"remainingRequest":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/components/player/PlayerMiddle.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/components/player/PlayerMiddle.vue","mtime":1586244227470},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/css-loader/dist/cjs.js","mtime":1584931130604},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1584931133236},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/postcss-loader/src/index.js","mtime":1584931132284},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/sass-loader/dist/cjs.js","mtime":1584931132739},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/cache-loader/dist/cjs.js","mtime":1584931130054},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/vue-loader/lib/index.js","mtime":1584931133236}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uLy4uL2Fzc2V0cy9jc3MvbWl4aW4iOwoubXktYnVsbGV0IHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgd2lkdGg6IDIwcHg7CiAgaGVpZ2h0OiAyMHB4OwogIGJvcmRlci1yYWRpdXM6IDEwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgbWFyZ2luOiAwIDIwcHg7Cn0KCi5teS1idWxsZXQtYWN0aXZlIHsKICBAaW5jbHVkZSBiZ19jb2xvcigpOwogIHdpZHRoOiA2MHB4Owp9Cg=="},{"version":3,"sources":["PlayerMiddle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"PlayerMiddle.vue","sourceRoot":"src/components/player","sourcesContent":["<template>\n  <swiper ref=\"mySwiper\" :options=\"swiperOptions\" class=\"banner\">\n    <swiper-slide class=\"cd\">\n      <div class=\"cd-wrapper\" ref=\"cdWrapper\">\n        <img :src=\"currentSong.picUrl\" alt />\n      </div>\n      <p>{{getFirstLyric()}}</p>\n    </swiper-slide>\n    <swiper-slide class=\"lyric\" ref=\"lyric\">\n      <ScrollView ref=\"scrollView\">\n        <ul>\n          <li\n            v-for=\"(value, key) in currentLyric\"\n            :key=\"key\"\n            :class=\"{'active' : currentKey === key}\"\n          >{{value}}</li>\n        </ul>\n      </ScrollView>\n    </swiper-slide>\n    <div class=\"swiper-pagination\" slot=\"pagination\"></div>\n  </swiper>\n</template>\n\n<script>\nimport { swiper, swiperSlide } from \"vue-awesome-swiper\";\nimport \"swiper/dist/css/swiper.css\";\nimport ScrollView from \"../../components/ScrollView\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"PlayerMiddle\",\n  data() {\n    return {\n      currentKey: \"0\",\n      swiperOptions: {\n        pagination: {\n          el: \".swiper-pagination\",\n          bulletClass: \"my-bullet\", //需设置.my-bullet样式\n          bulletActiveClass: \"my-bullet-active\" //激活状态的小圆点\n        },\n        observer: true,\n        observeParents: true,\n        observeSlideChildren: true\n      }\n    };\n  },\n\n  props: {\n    currentTime: {\n      type: Number,\n      default: 0,\n      required: true\n    }\n  },\n\n  created() {},\n\n  components: {\n    swiper,\n    swiperSlide,\n    ScrollView\n  },\n\n  computed: {\n    ...mapGetters([\"isPlaying\", \"currentSong\", \"currentLyric\"])\n  },\n\n  watch: {\n    isPlaying(newValue, oldValue) {\n      if (newValue) {\n        this.$refs.cdWrapper.classList.add(\"active\");\n      } else {\n        this.$refs.cdWrapper.classList.remove(\"active\");\n      }\n    },\n\n    currentTime(newValue, oldValue) {\n      // 高亮歌词同步\n      let lineNum = Math.floor(newValue)\n      this.currentKey = this.getActiveLineNum(lineNum);\n      // 歌词滚动同步\n      let currentLyricTop = document.querySelector(\"li.active\").offsetTop;\n      let lyricHeight = this.$refs.lyric.$el.offsetHeight;\n      if (currentLyricTop > lyricHeight / 2) {\n        this.$refs.scrollView.scrollTo(\n          0,\n          lyricHeight / 2 - currentLyricTop,\n          200·\n        );\n      } else {\n        this.$refs.scrollView.scrollTo(0, 0, 200);\n      }\n    },\n\n    currentLyric (newValue, oldValue) {\n      for (const key in newValue) {\n        this.currentKey = key\n        return\n      }\n    }\n  },\n\n  methods: {\n    getFirstLyric() {\n      for (const key in this.currentLyric) {\n        return this.currentLyric[key];\n      }\n    },\n\n    getActiveLineNum(lineNum) {\n      if (lineNum <= 0) {\n        return this.currentKey\n      }\n      let result = this.currentLyric[lineNum + \"\"];\n      if (result === undefined || result === \"\") {\n        lineNum--;\n        return this.getActiveLineNum(lineNum);\n      } else {\n        return lineNum + \"\";\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../assets/css/variable\";\n@import \"../../assets/css/mixin\";\n.banner {\n  position: fixed;\n  top: 150px;\n  left: 0;\n  right: 0;\n  bottom: 250px;\n  .cd {\n    .cd-wrapper {\n      display: block;\n      margin: 0 auto;\n      width: 500px;\n      height: 500px;\n      border-radius: 50%;\n      border: 10px solid white;\n      overflow: hidden;\n      animation: sport 8s linear infinite;\n      animation-play-state: paused;\n      &.active {\n        animation-play-state: running;\n      }\n      img {\n        width: 100%;\n        height: 100%;\n      }\n    }\n    p {\n      text-align: center;\n      @include font_color();\n      @include font_size($font_large);\n      margin-top: 50px;\n    }\n  }\n  .lyric {\n    li {\n      text-align: center;\n      margin: 10px 0;\n      @include font_color();\n      @include font_size($font_medium);\n      &:last-of-type {\n        padding-bottom: 52%;\n      }\n      &.active {\n        color: white;\n      }\n    }\n  }\n\n  @keyframes sport {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n}\n</style>\n\n<style lang=\"scss\">\n@import \"../../assets/css/mixin\";\n.my-bullet {\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: white;\n  margin: 0 20px;\n}\n\n.my-bullet-active {\n  @include bg_color();\n  width: 60px;\n}\n</style>\n"]}]}