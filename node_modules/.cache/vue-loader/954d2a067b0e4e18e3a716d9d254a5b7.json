{"remainingRequest":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/components/player/PlayerBottom.vue?vue&type=style&index=0&id=6108861a&lang=scss&scoped=true&","dependencies":[{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/components/player/PlayerBottom.vue","mtime":1585533291941},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/css-loader/dist/cjs.js","mtime":1584931130604},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1584931133236},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/postcss-loader/src/index.js","mtime":1584931132284},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/sass-loader/dist/cjs.js","mtime":1584931132739},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/cache-loader/dist/cjs.js","mtime":1584931130054},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/vue-loader/lib/index.js","mtime":1584931133236}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uLy4uL2Fzc2V0cy9jc3MvdmFyaWFibGUiOwpAaW1wb3J0ICIuLi8uLi9hc3NldHMvY3NzL21peGluIjsKLnBsYXllci1ib3R0b20gewogIHBvc2l0aW9uOiBmaXhlZDsKICB3aWR0aDogMTAwJTsKICBsZWZ0OiAwOwogIGJvdHRvbTogMDsKICAuYm90dG9tLXByb2dyZXNzIHsKICAgIHdpZHRoOiA4MCU7CiAgICBtYXJnaW46IDAgYXV0bzsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgc3BhbiB7CiAgICAgIEBpbmNsdWRlIGZvbnRfY29sb3IoKTsKICAgICAgQGluY2x1ZGUgZm9udF9zaXplKCRmb250X3NhbWxsKTsKICAgIH0KICAgIC5wcm9ncmVzcy1iYXIgewogICAgICB3aWR0aDogMTAwJTsKICAgICAgbWFyZ2luOiAwIDEwcHg7CiAgICAgIGhlaWdodDogMTBweDsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYzsKICAgICAgYm9yZGVyLXJhZGl1czogNXB4OwogICAgICAucHJvZ3Jlc3MtbGluZSB7CiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICAgIHdpZHRoOiAwJTsKICAgICAgICBoZWlnaHQ6IDEwMCU7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNXB4OwogICAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDVweDsKICAgICAgICAucHJvZ3Jlc3MtZG90IHsKICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTsKICAgICAgICAgIHdpZHRoOiAyMHB4OwogICAgICAgICAgaGVpZ2h0OiAyMHB4OwogICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgICBsZWZ0OiAxMDAlOwogICAgICAgICAgdG9wOiA1MCU7CiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQogIC5ib3R0b20tY29udHJvbCB7CiAgICB3aWR0aDogODAlOwogICAgbWFyZ2luOiAwIGF1dG87CiAgICBwYWRkaW5nOiA1MHB4IDA7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGRpdiB7CiAgICAgIHdpZHRoOiA4NHB4OwogICAgICBoZWlnaHQ6IDg0cHg7CiAgICB9CiAgICAubW9kZSB7CiAgICAgICYubG9vcCB7CiAgICAgICAgQGluY2x1ZGUgYmdfaW1nKCIuLi8uLi9hc3NldHMvaW1hZ2VzL2xvb3AiKTsKICAgICAgfQogICAgICAmLm9uZSB7CiAgICAgICAgQGluY2x1ZGUgYmdfaW1nKCIuLi8uLi9hc3NldHMvaW1hZ2VzL29uZSIpOwogICAgICB9CiAgICAgICYucmFuZG9tIHsKICAgICAgICBAaW5jbHVkZSBiZ19pbWcoIi4uLy4uL2Fzc2V0cy9pbWFnZXMvc2h1ZmZsZSIpOwogICAgICB9CiAgICB9CiAgICAucHJldiB7CiAgICAgIEBpbmNsdWRlIGJnX2ltZygiLi4vLi4vYXNzZXRzL2ltYWdlcy9wcmV2Iik7CiAgICB9CiAgICAucGxheSB7CiAgICAgIEBpbmNsdWRlIGJnX2ltZygiLi4vLi4vYXNzZXRzL2ltYWdlcy9wbGF5Iik7CiAgICAgICYuYWN0aXZlIHsKICAgICAgICBAaW5jbHVkZSBiZ19pbWcoIi4uLy4uL2Fzc2V0cy9pbWFnZXMvcGF1c2UiKTsKICAgICAgfQogICAgfQogICAgLm5leHQgewogICAgICBAaW5jbHVkZSBiZ19pbWcoIi4uLy4uL2Fzc2V0cy9pbWFnZXMvbmV4dCIpOwogICAgfQogICAgLmZhdm9yaXRlIHsKICAgICAgQGluY2x1ZGUgYmdfaW1nKCIuLi8uLi9hc3NldHMvaW1hZ2VzL3VuX2Zhdm9yaXRlIik7CiAgICAgICYuYWN0aXZlIHsKICAgICAgICAgIEBpbmNsdWRlIGJnX2ltZygiLi4vLi4vYXNzZXRzL2ltYWdlcy9mYXZvcml0ZSIpOwogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["PlayerBottom.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PlayerBottom.vue","sourceRoot":"src/components/player","sourcesContent":["<template>\n  <div class=\"player-bottom\">\n    <div class=\"bottom-progress\">\n      <span ref=\"eleCurrentTime\">00:00</span>\n      <div class=\"progress-bar\" @click=\"progressClick\" ref=\"progressBar\">\n        <div class=\"progress-line\" ref=\"progressLine\">\n            <div class=\"progress-dot\" ref=\"progressDot\"></div>\n        </div>\n      </div>\n      <span ref=\"eleTotalTime\">00:00</span>\n    </div>\n    <div class=\"bottom-control\">\n      <div class=\"mode loop\" ref=\"mode\" @click=\"setMode\"></div>\n      <div class=\"prev\" @click=\"prev\"></div>\n      <div class=\"play\" @click=\"playMusic\" ref=\"play\"></div>\n      <div class=\"next\" @click=\"next\"></div>\n      <div class=\"favorite\" @click=\"favorite\" :class=\"{'active' : isFavorite()}\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from \"vuex\";\nimport mode from \"../../store/modeType\";\nimport { formartTime } from \"../../tools/tool\";\n\nexport default {\n  name: \"PlayerBottom\",\n\n  props: {\n    totalTime: {\n      type: Number,\n      default: 0,\n      required: true\n    },\n    currentTime: {\n      type: Number,\n      default: 0,\n      required: true\n    }\n  },\n\n  methods: {\n    ...mapActions([\n        \"setIsPlaying\", \n        \"setModeType\", \n        \"setCurrentIndex\", \n        'setCurrentPlayTime',\n        'setFavoriteSong'\n        ]),\n\n    playMusic() {\n      this.setIsPlaying(!this.isPlaying);\n    },\n\n    setMode() {\n      if (this.modeType === mode.loop) {\n        this.setModeType(mode.one);\n      } else if (this.modeType === mode.one) {\n        this.setModeType(mode.random);\n      } else if (this.modeType === mode.random) {\n        this.setModeType(mode.loop);\n      }\n    },\n\n    prev() {\n      this.setCurrentIndex(this.currentIndex - 1);\n    },\n\n    next() {\n      this.setCurrentIndex(this.currentIndex + 1);\n    },\n\n    progressClick(e) {\n      // 计算进度条的位置\n      let normalLeft = this.$refs.progressBar.offsetLeft\n      let eventLeft = e.pageX\n      let clickLeft = eventLeft - normalLeft\n      let progressWidth = this.$refs.progressBar.offsetWidth\n      let percent = clickLeft / progressWidth\n      this.$refs.progressLine.style.width = percent * 100 + \"%\"\n      let curTime = this.totalTime * percent\n       // 设置当前播放时间   \n       this.setCurrentPlayTime(curTime)\n    },\n\n    favorite() {\n       this.setFavoriteSong(this.currentSong)\n    },\n\n    isFavorite() {\n      let result = this.favoriteList.find(currentValue => {\n          return currentValue.id === this.currentSong.id\n      })\n      return result !== undefined\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n        \"isPlaying\", \n        \"modeType\", \n        \"currentIndex\",\n        'currentSong',\n        'favoriteList'\n        ])\n  },\n\n  watch: {\n    isPlaying(newValue, oldValue) {\n      if (newValue) {\n        this.$refs.play.classList.add(\"active\");\n      } else {\n        this.$refs.play.classList.remove(\"active\");\n      }\n    },\n\n    modeType(newValue, oldValue) {\n      this.$refs.mode.classList.remove(\"loop\");\n      this.$refs.mode.classList.remove(\"one\");\n      this.$refs.mode.classList.remove(\"random\");\n      if (newValue === mode.loop) {\n        this.$refs.mode.classList.add(\"loop\");\n      } else if (newValue === mode.one) {\n        this.$refs.mode.classList.add(\"one\");\n      } else if (newValue === mode.random) {\n        this.$refs.mode.classList.add(\"random\");\n      }\n    },\n\n    totalTime(newValue, oldValue) {\n      let time = formartTime(newValue);\n      this.$refs.eleTotalTime.innerHTML = time.minute + \":\" + time.second;\n    },\n    currentTime(newValue, oldValue) {\n      let time = formartTime(newValue);\n      this.$refs.eleCurrentTime.innerHTML = time.minute + \":\" + time.second;\n      let percent = (newValue / this.totalTime) * 100;\n      this.$refs.progressLine.style.width = percent + \"%\";\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../assets/css/variable\";\n@import \"../../assets/css/mixin\";\n.player-bottom {\n  position: fixed;\n  width: 100%;\n  left: 0;\n  bottom: 0;\n  .bottom-progress {\n    width: 80%;\n    margin: 0 auto;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    span {\n      @include font_color();\n      @include font_size($font_samll);\n    }\n    .progress-bar {\n      width: 100%;\n      margin: 0 10px;\n      height: 10px;\n      background-color: #ccc;\n      border-radius: 5px;\n      .progress-line {\n        position: relative;\n        width: 0%;\n        height: 100%;\n        background-color: white;\n        border-top-left-radius: 5px;\n        border-bottom-left-radius: 5px;\n        .progress-dot {\n          border-radius: 50%;\n          width: 20px;\n          height: 20px;\n          background-color: white;\n          position: absolute;\n          left: 100%;\n          top: 50%;\n          transform: translateY(-50%);\n        }\n      }\n    }\n  }\n  .bottom-control {\n    width: 80%;\n    margin: 0 auto;\n    padding: 50px 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    div {\n      width: 84px;\n      height: 84px;\n    }\n    .mode {\n      &.loop {\n        @include bg_img(\"../../assets/images/loop\");\n      }\n      &.one {\n        @include bg_img(\"../../assets/images/one\");\n      }\n      &.random {\n        @include bg_img(\"../../assets/images/shuffle\");\n      }\n    }\n    .prev {\n      @include bg_img(\"../../assets/images/prev\");\n    }\n    .play {\n      @include bg_img(\"../../assets/images/play\");\n      &.active {\n        @include bg_img(\"../../assets/images/pause\");\n      }\n    }\n    .next {\n      @include bg_img(\"../../assets/images/next\");\n    }\n    .favorite {\n      @include bg_img(\"../../assets/images/un_favorite\");\n      &.active {\n          @include bg_img(\"../../assets/images/favorite\");\n      }\n    }\n  }\n}\n</style>"]}]}