{"remainingRequest":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/components/player/NormalPlayer.vue?vue&type=style&index=0&id=7bbfe354&lang=scss&scoped=true&","dependencies":[{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/components/player/NormalPlayer.vue","mtime":1585533291940},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/css-loader/dist/cjs.js","mtime":1584931130604},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1584931133236},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/postcss-loader/src/index.js","mtime":1584931132284},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/sass-loader/dist/cjs.js","mtime":1584931132739},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/cache-loader/dist/cjs.js","mtime":1584931130054},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/vue-loader/lib/index.js","mtime":1584931133236}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uLy4uL2Fzc2V0cy9jc3MvdmFyaWFibGUiOwpAaW1wb3J0ICIuLi8uLi9hc3NldHMvY3NzL21peGluIjsKCi5wbGF5ZXIgewogIHBvc2l0aW9uOiBmaXhlZDsKICBsZWZ0OiAwOwogIHJpZ2h0OiAwOwogIGJvdHRvbTogMDsKICB0b3A6IDA7CiAgYmFja2dyb3VuZC1jb2xvcjogcGluazsKICBAaW5jbHVkZSBiZ19zdWJfY29sb3IoKTsKICAubm9ybWFsLXBsYXllci13cmFwcGVyIHsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAxMDAlOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgei1pbmRleDogOTk5OwogIH0KICAucGxheWVyLWJnIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIGxlZnQ6IDA7CiAgICB0b3A6IDA7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogMTAwJTsKICAgIGltZyB7CiAgICAgIGhlaWdodDogMTAwJTsKICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICBsZWZ0OiA1MCU7CiAgICAgIHRvcDogNTAlOwogICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKICAgICAgZmlsdGVyOiBibHVyKDEwcHgpOwogICAgfQogIH0KfQo="},{"version":3,"sources":["NormalPlayer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NormalPlayer.vue","sourceRoot":"src/components/player","sourcesContent":["<template>\n  <!-- <div class=\"player\" v-show=\"this.$store.state.isFullScreen\"> -->\n  <transition\n  :css=\"false\"\n  @enter=\"enter\"\n  @leave=\"leave\"\n  >\n    <div class=\"player\" v-show=\"isFullScreen\">\n      <div class=\"normal-player-wrapper\">\n        <PlayerHeader></PlayerHeader>\n        <PlayerMiddle :currentTime=\"currentTime\"></PlayerMiddle>\n        <PlayerBottom :totalTime=\"totalTime\" :currentTime=\"currentTime\"></PlayerBottom>\n      </div>\n      <div class=\"player-bg\">\n        <img\n          :src=\"currentSong.picUrl\"\n          alt=\"\"\n        />\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport PlayerHeader from \"./PlayerHeader\";\nimport PlayerMiddle from \"./PlayerMiddle\";\nimport PlayerBottom from \"./PlayerBottom\";\nimport { mapGetters, mapActions } from \"vuex\";\nimport Velocity from 'velocity-animate'\nimport 'velocity-animate/velocity.ui'\n\nexport default {\n  name: \"Player\",\n  components: {\n    PlayerHeader,\n    PlayerMiddle,\n    PlayerBottom\n  },\n  \n  props: {\n    totalTime: {\n      type: Number,\n      default: 0,\n      required: true\n    },\n    currentTime: {\n      type: Number,\n      default: 0,\n      required: true\n    },\n  },\n\n  computed: {\n    ...mapGetters([\"isFullScreen\",'currentSong'])\n  },\n\n  methods: {\n      ...mapActions([\n        'getSongLyric'\n      ]),\n\n      enter (el, done) {\n          Velocity(el, 'transition.shrinkIn', {duration: 300}, function () {\n              done()\n          })\n      },\n      leave (el, done) {\n          Velocity(el, 'transition.shrinkOut', {duration: 300}, function () {\n              done()\n          })\n      },\n  },\n\n  watch: {\n    currentSong (newValue, oldValue) {\n      if (newValue.id === undefined) {\n        return\n      }\n      this.getSongLyric(newValue.id)\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../assets/css/variable\";\n@import \"../../assets/css/mixin\";\n\n.player {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  background-color: pink;\n  @include bg_sub_color();\n  .normal-player-wrapper {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 999;\n  }\n  .player-bg {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    img {\n      height: 100%;\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      filter: blur(10px);\n    }\n  }\n}\n</style>\n"]}]}