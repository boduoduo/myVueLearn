{"remainingRequest":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/babel-loader/lib/index.js!/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/components/player/PlayerBottom.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/components/player/PlayerBottom.vue","mtime":1585533291941},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/cache-loader/dist/cjs.js","mtime":1584931130054},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/babel-loader/lib/index.js","mtime":1584931129970},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/cache-loader/dist/cjs.js","mtime":1584931130054},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/vue-loader/lib/index.js","mtime":1584931133236}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9NYXhiL0Rlc2t0b3AvSFRNTDUvVnVlXHU1QjY2XHU0RTYwL2RheS0wMDQvbXlWdWVMZWFybi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcEdldHRlcnMgfSBmcm9tICJ2dWV4IjsKaW1wb3J0IG1vZGUgZnJvbSAiLi4vLi4vc3RvcmUvbW9kZVR5cGUiOwppbXBvcnQgeyBmb3JtYXJ0VGltZSB9IGZyb20gIi4uLy4uL3Rvb2xzL3Rvb2wiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlBsYXllckJvdHRvbSIsCiAgcHJvcHM6IHsKICAgIHRvdGFsVGltZTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgICJkZWZhdWx0IjogMCwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBjdXJyZW50VGltZTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgICJkZWZhdWx0IjogMCwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9LAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoe30sIG1hcEFjdGlvbnMoWyJzZXRJc1BsYXlpbmciLCAic2V0TW9kZVR5cGUiLCAic2V0Q3VycmVudEluZGV4IiwgJ3NldEN1cnJlbnRQbGF5VGltZScsICdzZXRGYXZvcml0ZVNvbmcnXSksIHsKICAgIHBsYXlNdXNpYzogZnVuY3Rpb24gcGxheU11c2ljKCkgewogICAgICB0aGlzLnNldElzUGxheWluZyghdGhpcy5pc1BsYXlpbmcpOwogICAgfSwKICAgIHNldE1vZGU6IGZ1bmN0aW9uIHNldE1vZGUoKSB7CiAgICAgIGlmICh0aGlzLm1vZGVUeXBlID09PSBtb2RlLmxvb3ApIHsKICAgICAgICB0aGlzLnNldE1vZGVUeXBlKG1vZGUub25lKTsKICAgICAgfSBlbHNlIGlmICh0aGlzLm1vZGVUeXBlID09PSBtb2RlLm9uZSkgewogICAgICAgIHRoaXMuc2V0TW9kZVR5cGUobW9kZS5yYW5kb20pOwogICAgICB9IGVsc2UgaWYgKHRoaXMubW9kZVR5cGUgPT09IG1vZGUucmFuZG9tKSB7CiAgICAgICAgdGhpcy5zZXRNb2RlVHlwZShtb2RlLmxvb3ApOwogICAgICB9CiAgICB9LAogICAgcHJldjogZnVuY3Rpb24gcHJldigpIHsKICAgICAgdGhpcy5zZXRDdXJyZW50SW5kZXgodGhpcy5jdXJyZW50SW5kZXggLSAxKTsKICAgIH0sCiAgICBuZXh0OiBmdW5jdGlvbiBuZXh0KCkgewogICAgICB0aGlzLnNldEN1cnJlbnRJbmRleCh0aGlzLmN1cnJlbnRJbmRleCArIDEpOwogICAgfSwKICAgIHByb2dyZXNzQ2xpY2s6IGZ1bmN0aW9uIHByb2dyZXNzQ2xpY2soZSkgewogICAgICAvLyDorqHnrpfov5vluqbmnaHnmoTkvY3nva4KICAgICAgdmFyIG5vcm1hbExlZnQgPSB0aGlzLiRyZWZzLnByb2dyZXNzQmFyLm9mZnNldExlZnQ7CiAgICAgIHZhciBldmVudExlZnQgPSBlLnBhZ2VYOwogICAgICB2YXIgY2xpY2tMZWZ0ID0gZXZlbnRMZWZ0IC0gbm9ybWFsTGVmdDsKICAgICAgdmFyIHByb2dyZXNzV2lkdGggPSB0aGlzLiRyZWZzLnByb2dyZXNzQmFyLm9mZnNldFdpZHRoOwogICAgICB2YXIgcGVyY2VudCA9IGNsaWNrTGVmdCAvIHByb2dyZXNzV2lkdGg7CiAgICAgIHRoaXMuJHJlZnMucHJvZ3Jlc3NMaW5lLnN0eWxlLndpZHRoID0gcGVyY2VudCAqIDEwMCArICIlIjsKICAgICAgdmFyIGN1clRpbWUgPSB0aGlzLnRvdGFsVGltZSAqIHBlcmNlbnQ7IC8vIOiuvue9ruW9k+WJjeaSreaUvuaXtumXtCAgIAoKICAgICAgdGhpcy5zZXRDdXJyZW50UGxheVRpbWUoY3VyVGltZSk7CiAgICB9LAogICAgZmF2b3JpdGU6IGZ1bmN0aW9uIGZhdm9yaXRlKCkgewogICAgICB0aGlzLnNldEZhdm9yaXRlU29uZyh0aGlzLmN1cnJlbnRTb25nKTsKICAgIH0sCiAgICBpc0Zhdm9yaXRlOiBmdW5jdGlvbiBpc0Zhdm9yaXRlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuZmF2b3JpdGVMaXN0LmZpbmQoZnVuY3Rpb24gKGN1cnJlbnRWYWx1ZSkgewogICAgICAgIHJldHVybiBjdXJyZW50VmFsdWUuaWQgPT09IF90aGlzLmN1cnJlbnRTb25nLmlkOwogICAgICB9KTsKICAgICAgcmV0dXJuIHJlc3VsdCAhPT0gdW5kZWZpbmVkOwogICAgfQogIH0pLAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKFsiaXNQbGF5aW5nIiwgIm1vZGVUeXBlIiwgImN1cnJlbnRJbmRleCIsICdjdXJyZW50U29uZycsICdmYXZvcml0ZUxpc3QnXSkpLAogIHdhdGNoOiB7CiAgICBpc1BsYXlpbmc6IGZ1bmN0aW9uIGlzUGxheWluZyhuZXdWYWx1ZSwgb2xkVmFsdWUpIHsKICAgICAgaWYgKG5ld1ZhbHVlKSB7CiAgICAgICAgdGhpcy4kcmVmcy5wbGF5LmNsYXNzTGlzdC5hZGQoImFjdGl2ZSIpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJHJlZnMucGxheS5jbGFzc0xpc3QucmVtb3ZlKCJhY3RpdmUiKTsKICAgICAgfQogICAgfSwKICAgIG1vZGVUeXBlOiBmdW5jdGlvbiBtb2RlVHlwZShuZXdWYWx1ZSwgb2xkVmFsdWUpIHsKICAgICAgdGhpcy4kcmVmcy5tb2RlLmNsYXNzTGlzdC5yZW1vdmUoImxvb3AiKTsKICAgICAgdGhpcy4kcmVmcy5tb2RlLmNsYXNzTGlzdC5yZW1vdmUoIm9uZSIpOwogICAgICB0aGlzLiRyZWZzLm1vZGUuY2xhc3NMaXN0LnJlbW92ZSgicmFuZG9tIik7CgogICAgICBpZiAobmV3VmFsdWUgPT09IG1vZGUubG9vcCkgewogICAgICAgIHRoaXMuJHJlZnMubW9kZS5jbGFzc0xpc3QuYWRkKCJsb29wIik7CiAgICAgIH0gZWxzZSBpZiAobmV3VmFsdWUgPT09IG1vZGUub25lKSB7CiAgICAgICAgdGhpcy4kcmVmcy5tb2RlLmNsYXNzTGlzdC5hZGQoIm9uZSIpOwogICAgICB9IGVsc2UgaWYgKG5ld1ZhbHVlID09PSBtb2RlLnJhbmRvbSkgewogICAgICAgIHRoaXMuJHJlZnMubW9kZS5jbGFzc0xpc3QuYWRkKCJyYW5kb20iKTsKICAgICAgfQogICAgfSwKICAgIHRvdGFsVGltZTogZnVuY3Rpb24gdG90YWxUaW1lKG5ld1ZhbHVlLCBvbGRWYWx1ZSkgewogICAgICB2YXIgdGltZSA9IGZvcm1hcnRUaW1lKG5ld1ZhbHVlKTsKICAgICAgdGhpcy4kcmVmcy5lbGVUb3RhbFRpbWUuaW5uZXJIVE1MID0gdGltZS5taW51dGUgKyAiOiIgKyB0aW1lLnNlY29uZDsKICAgIH0sCiAgICBjdXJyZW50VGltZTogZnVuY3Rpb24gY3VycmVudFRpbWUobmV3VmFsdWUsIG9sZFZhbHVlKSB7CiAgICAgIHZhciB0aW1lID0gZm9ybWFydFRpbWUobmV3VmFsdWUpOwogICAgICB0aGlzLiRyZWZzLmVsZUN1cnJlbnRUaW1lLmlubmVySFRNTCA9IHRpbWUubWludXRlICsgIjoiICsgdGltZS5zZWNvbmQ7CiAgICAgIHZhciBwZXJjZW50ID0gbmV3VmFsdWUgLyB0aGlzLnRvdGFsVGltZSAqIDEwMDsKICAgICAgdGhpcy4kcmVmcy5wcm9ncmVzc0xpbmUuc3R5bGUud2lkdGggPSBwZXJjZW50ICsgIiUiOwogICAgfQogIH0KfTs="},{"version":3,"sources":["PlayerBottom.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"player-bottom\">\n    <div class=\"bottom-progress\">\n      <span ref=\"eleCurrentTime\">00:00</span>\n      <div class=\"progress-bar\" @click=\"progressClick\" ref=\"progressBar\">\n        <div class=\"progress-line\" ref=\"progressLine\">\n            <div class=\"progress-dot\" ref=\"progressDot\"></div>\n        </div>\n      </div>\n      <span ref=\"eleTotalTime\">00:00</span>\n    </div>\n    <div class=\"bottom-control\">\n      <div class=\"mode loop\" ref=\"mode\" @click=\"setMode\"></div>\n      <div class=\"prev\" @click=\"prev\"></div>\n      <div class=\"play\" @click=\"playMusic\" ref=\"play\"></div>\n      <div class=\"next\" @click=\"next\"></div>\n      <div class=\"favorite\" @click=\"favorite\" :class=\"{'active' : isFavorite()}\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from \"vuex\";\nimport mode from \"../../store/modeType\";\nimport { formartTime } from \"../../tools/tool\";\n\nexport default {\n  name: \"PlayerBottom\",\n\n  props: {\n    totalTime: {\n      type: Number,\n      default: 0,\n      required: true\n    },\n    currentTime: {\n      type: Number,\n      default: 0,\n      required: true\n    }\n  },\n\n  methods: {\n    ...mapActions([\n        \"setIsPlaying\", \n        \"setModeType\", \n        \"setCurrentIndex\", \n        'setCurrentPlayTime',\n        'setFavoriteSong'\n        ]),\n\n    playMusic() {\n      this.setIsPlaying(!this.isPlaying);\n    },\n\n    setMode() {\n      if (this.modeType === mode.loop) {\n        this.setModeType(mode.one);\n      } else if (this.modeType === mode.one) {\n        this.setModeType(mode.random);\n      } else if (this.modeType === mode.random) {\n        this.setModeType(mode.loop);\n      }\n    },\n\n    prev() {\n      this.setCurrentIndex(this.currentIndex - 1);\n    },\n\n    next() {\n      this.setCurrentIndex(this.currentIndex + 1);\n    },\n\n    progressClick(e) {\n      // 计算进度条的位置\n      let normalLeft = this.$refs.progressBar.offsetLeft\n      let eventLeft = e.pageX\n      let clickLeft = eventLeft - normalLeft\n      let progressWidth = this.$refs.progressBar.offsetWidth\n      let percent = clickLeft / progressWidth\n      this.$refs.progressLine.style.width = percent * 100 + \"%\"\n      let curTime = this.totalTime * percent\n       // 设置当前播放时间   \n       this.setCurrentPlayTime(curTime)\n    },\n\n    favorite() {\n       this.setFavoriteSong(this.currentSong)\n    },\n\n    isFavorite() {\n      let result = this.favoriteList.find(currentValue => {\n          return currentValue.id === this.currentSong.id\n      })\n      return result !== undefined\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n        \"isPlaying\", \n        \"modeType\", \n        \"currentIndex\",\n        'currentSong',\n        'favoriteList'\n        ])\n  },\n\n  watch: {\n    isPlaying(newValue, oldValue) {\n      if (newValue) {\n        this.$refs.play.classList.add(\"active\");\n      } else {\n        this.$refs.play.classList.remove(\"active\");\n      }\n    },\n\n    modeType(newValue, oldValue) {\n      this.$refs.mode.classList.remove(\"loop\");\n      this.$refs.mode.classList.remove(\"one\");\n      this.$refs.mode.classList.remove(\"random\");\n      if (newValue === mode.loop) {\n        this.$refs.mode.classList.add(\"loop\");\n      } else if (newValue === mode.one) {\n        this.$refs.mode.classList.add(\"one\");\n      } else if (newValue === mode.random) {\n        this.$refs.mode.classList.add(\"random\");\n      }\n    },\n\n    totalTime(newValue, oldValue) {\n      let time = formartTime(newValue);\n      this.$refs.eleTotalTime.innerHTML = time.minute + \":\" + time.second;\n    },\n    currentTime(newValue, oldValue) {\n      let time = formartTime(newValue);\n      this.$refs.eleCurrentTime.innerHTML = time.minute + \":\" + time.second;\n      let percent = (newValue / this.totalTime) * 100;\n      this.$refs.progressLine.style.width = percent + \"%\";\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../assets/css/variable\";\n@import \"../../assets/css/mixin\";\n.player-bottom {\n  position: fixed;\n  width: 100%;\n  left: 0;\n  bottom: 0;\n  .bottom-progress {\n    width: 80%;\n    margin: 0 auto;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    span {\n      @include font_color();\n      @include font_size($font_samll);\n    }\n    .progress-bar {\n      width: 100%;\n      margin: 0 10px;\n      height: 10px;\n      background-color: #ccc;\n      border-radius: 5px;\n      .progress-line {\n        position: relative;\n        width: 0%;\n        height: 100%;\n        background-color: white;\n        border-top-left-radius: 5px;\n        border-bottom-left-radius: 5px;\n        .progress-dot {\n          border-radius: 50%;\n          width: 20px;\n          height: 20px;\n          background-color: white;\n          position: absolute;\n          left: 100%;\n          top: 50%;\n          transform: translateY(-50%);\n        }\n      }\n    }\n  }\n  .bottom-control {\n    width: 80%;\n    margin: 0 auto;\n    padding: 50px 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    div {\n      width: 84px;\n      height: 84px;\n    }\n    .mode {\n      &.loop {\n        @include bg_img(\"../../assets/images/loop\");\n      }\n      &.one {\n        @include bg_img(\"../../assets/images/one\");\n      }\n      &.random {\n        @include bg_img(\"../../assets/images/shuffle\");\n      }\n    }\n    .prev {\n      @include bg_img(\"../../assets/images/prev\");\n    }\n    .play {\n      @include bg_img(\"../../assets/images/play\");\n      &.active {\n        @include bg_img(\"../../assets/images/pause\");\n      }\n    }\n    .next {\n      @include bg_img(\"../../assets/images/next\");\n    }\n    .favorite {\n      @include bg_img(\"../../assets/images/un_favorite\");\n      &.active {\n          @include bg_img(\"../../assets/images/favorite\");\n      }\n    }\n  }\n}\n</style>"],"sourceRoot":"src/components/player"}]}