{"remainingRequest":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/babel-loader/lib/index.js!/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/api/index.js","dependencies":[{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/api/index.js","mtime":1585736892867},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/cache-loader/dist/cjs.js","mtime":1584931130054},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/babel-loader/lib/index.js","mtime":1584931129970}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiL1VzZXJzL01heGIvRGVza3RvcC9IVE1MNS9WdWVcdTVCNjZcdTRFNjAvZGF5LTAwNC9teVZ1ZUxlYXJuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBOZXR3b3JrIGZyb20gJy4vbWJuZXR3b3JrJzsKaW1wb3J0IHsgUHJvbWlzZSB9IGZyb20gJ2NvcmUtanMnOyAvLyDojrflj5ZCYW5uZXLmlbDmja4KCmV4cG9ydCB2YXIgZ2V0TXlCYW5uZXIgPSBmdW5jdGlvbiBnZXRNeUJhbm5lcigpIHsKICByZXR1cm4gTmV0d29yay5tYl9nZXQoJy9iYW5uZXI/dHlwZT0yJyk7Cn07IC8vIOiOt+WPluaOqOiNkOatjOWNlQoKZXhwb3J0IHZhciBnZXRQZXJzb25hbGl6ZWQgPSBmdW5jdGlvbiBnZXRQZXJzb25hbGl6ZWQoKSB7CiAgcmV0dXJuIE5ldHdvcmsubWJfZ2V0KCcvcGVyc29uYWxpemVkP2xpbWl0PTEyJyk7Cn07IC8vIOiOt+WPluacgOaWsOS4k+i+kQoKZXhwb3J0IHZhciBnZXROZXdlc3RBbGJ1bSA9IGZ1bmN0aW9uIGdldE5ld2VzdEFsYnVtKCkgewogIHJldHVybiBOZXR3b3JrLm1iX2dldCgnL2FsYnVtL25ld2VzdCcpOwp9OyAvLyDojrflj5bmnIDmlrDmrYzljZUKCmV4cG9ydCB2YXIgZ2V0TmV3ZXN0U29uZyA9IGZ1bmN0aW9uIGdldE5ld2VzdFNvbmcoKSB7CiAgcmV0dXJuIE5ldHdvcmsubWJfZ2V0KCcvcGVyc29uYWxpemVkL25ld3NvbmcnKTsKfTsgLy8g6I635Y+W5q2M5Y2V6K+m5oOFCgpleHBvcnQgdmFyIGdldFBsYXlMaXN0ID0gZnVuY3Rpb24gZ2V0UGxheUxpc3QoZGF0YSkgewogIHJldHVybiBOZXR3b3JrLm1iX2dldCgnL3BsYXlsaXN0L2RldGFpbCcsIGRhdGEpOwp9OyAvLyDojrflj5bkuJPovpHor6bmg4UKCmV4cG9ydCB2YXIgZ2V0QWxidW1EZXRhaWwgPSBmdW5jdGlvbiBnZXRBbGJ1bURldGFpbChkYXRhKSB7CiAgcmV0dXJuIE5ldHdvcmsubWJfZ2V0KCcvYWxidW0nLCBkYXRhKTsKfTsgLy8g6I635Y+W5q2M5puy6K+m5oOFCgpleHBvcnQgdmFyIGdldFNvbmdEZXRhaWwgPSBmdW5jdGlvbiBnZXRTb25nRGV0YWlsKGRhdGEpIHsKICByZXR1cm4gTmV0d29yay5tYl9nZXQoJy9zb25nL2RldGFpbCcsIGRhdGEpOwp9OyAvLyDojrflj5bmrYzor40KCmV4cG9ydCB2YXIgZ2V0U29uZ0x5cmljID0gZnVuY3Rpb24gZ2V0U29uZ0x5cmljKGRhdGEpIHsKICByZXR1cm4gTmV0d29yay5tYl9nZXQoJy9seXJpYycsIGRhdGEpOwp9OyAvLyDojrflj5bmrYzmm7Lmkq3mlL7lnLDlnYAKCmV4cG9ydCB2YXIgZ2V0U29uZ1VSTCA9IGZ1bmN0aW9uIGdldFNvbmdVUkwoZGF0YSkgewogIHJldHVybiBOZXR3b3JrLm1iX2dldCgnL3NvbmcvdXJsJywgZGF0YSk7Cn07IC8vIOiOt+WPluatjOaJi+ivpuaDhQoKZXhwb3J0IHZhciBnZXRBcnRpc3RzRGV0YWlsID0gZnVuY3Rpb24gZ2V0QXJ0aXN0c0RldGFpbChkYXRhKSB7CiAgcmV0dXJuIE5ldHdvcmsubWJfZ2V0KCcvYXJ0aXN0cycsIGRhdGEpOwp9OyAvLyDojrflj5bng63pl6jmrYzmiYsKCmV4cG9ydCB2YXIgZ2V0SG90QXJ0aXN0cyA9IGZ1bmN0aW9uIGdldEhvdEFydGlzdHMoKSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIE5ldHdvcmsubWJfZ2V0KCcvdG9wL2FydGlzdHM/b2Zmc2V0PTAmbGltaXQ9NScpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICByZXNvbHZlKHJlcy5hcnRpc3RzKTsKICAgIH0pWyJjYXRjaCJdKGZ1bmN0aW9uIChlcnJvcikgewogICAgICByZWplY3QoZXJyb3IpOwogICAgfSk7CiAgfSk7Cn07IC8vIOiOt+WPluWtl+avjeeahOatjOaJiwoKZXhwb3J0IHZhciBnZXRMZXR0ZXJzQXJ0aXN0cyA9IGZ1bmN0aW9uIGdldExldHRlcnNBcnRpc3RzKGxldHRlcikgewogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICB2YXIgbGV0dGVyQXJ0aXN0cyA9IFtdOwogICAgTmV0d29yay5tYl9hbGwoW05ldHdvcmsubWJfZ2V0KCJhcnRpc3QvbGlzdD9vZmZzZXQ9MCZsaW1pdD01JmNhdD0xMDAxJmluaXRpYWw9Ii5jb25jYXQobGV0dGVyKSkgLy8g5ZCO6Z2i55qE6YO95piv5LiA5qC355qE77yMY2F05Y+C5pWw5bey5aSx5pWICiAgICAvLyBOZXR3b3JrLm1iX2dldChgYXJ0aXN0L2xpc3Q/b2Zmc2V0PTAmbGltaXQ9NSZjYXQ9MjAwMSZpbml0aWFsPSR7bGV0dGVyfWApLAogICAgLy8gTmV0d29yay5tYl9nZXQoYGFydGlzdC9saXN0P29mZnNldD0wJmxpbWl0PTUmY2F0PTYwMDEmaW5pdGlhbD0ke2xldHRlcn1gKSwKICAgIC8vIE5ldHdvcmsubWJfZ2V0KGBhcnRpc3QvbGlzdD9vZmZzZXQ9MCZsaW1pdD01JmNhdD03MDAxJmluaXRpYWw9JHtsZXR0ZXJ9YCksCiAgICAvLyBOZXR3b3JrLm1iX2dldChgYXJ0aXN0L2xpc3Q/b2Zmc2V0PTAmbGltaXQ9NSZjYXQ9NDAwMSZpbml0aWFsPSR7bGV0dGVyfWApLAogICAgLy8gTmV0d29yay5tYl9nZXQoYGFydGlzdC9saXN0P29mZnNldD0wJmxpbWl0PTUmY2F0PTUwMDMmaW5pdGlhbD0ke2xldHRlcn1gKSwKICAgIF0pLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICByZXN1bHQuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIGxldHRlckFydGlzdHMucHVzaC5hcHBseShsZXR0ZXJBcnRpc3RzLCBfdG9Db25zdW1hYmxlQXJyYXkoaXRlbS5hcnRpc3RzKSk7CiAgICAgIH0pOwogICAgICByZXNvbHZlKGxldHRlckFydGlzdHMpOwogICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIHJlamVjdChlcnJvcik7CiAgICB9KTsKICB9KTsKfTsgLy8g6I635Y+WQS1a5a2X5q+N55qE5q2M5omLCgpleHBvcnQgdmFyIGdldEFsbEFydGlzdHMgPSBmdW5jdGlvbiBnZXRBbGxBcnRpc3RzKCkgewogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICB2YXIga2V5cyA9IFsn54OtJ107CiAgICB2YXIgbGlzdCA9IFtnZXRIb3RBcnRpc3RzKCldOwoKICAgIGZvciAodmFyIGkgPSA2NTsgaSA8IDkxOyBpKyspIHsKICAgICAgdmFyIF9jaGFyID0gU3RyaW5nLmZyb21DaGFyQ29kZShpKTsKCiAgICAgIGtleXMucHVzaChfY2hhcik7CiAgICAgIGxpc3QucHVzaChnZXRMZXR0ZXJzQXJ0aXN0cyhfY2hhcikpOwogICAgfQoKICAgIE5ldHdvcmsubWJfYWxsKGxpc3QpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICB2YXIgb2JqID0ge307CiAgICAgIG9iai5rZXlzID0ga2V5czsKICAgICAgb2JqLmxpc3QgPSByZXN1bHQ7CiAgICAgIHJlc29sdmUob2JqKTsKICAgIH0pWyJjYXRjaCJdKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgcmVqZWN0KGVycik7CiAgICB9KTsKICB9KTsKfTs="},{"version":3,"sources":["/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/api/index.js"],"names":["Network","Promise","getMyBanner","mb_get","getPersonalized","getNewestAlbum","getNewestSong","getPlayList","data","getAlbumDetail","getSongDetail","getSongLyric","getSongURL","getArtistsDetail","getHotArtists","resolve","reject","then","res","artists","error","getLettersArtists","letter","letterArtists","mb_all","result","forEach","item","push","getAllArtists","keys","list","i","char","String","fromCharCode","obj","err"],"mappings":"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","sourcesContent":["import Network from './mbnetwork'\nimport { Promise } from 'core-js'\n\n// 获取Banner数据\nexport const getMyBanner = () => Network.mb_get('/banner?type=2')\n// 获取推荐歌单\nexport const getPersonalized = () => Network.mb_get('/personalized?limit=12')\n// 获取最新专辑\nexport const getNewestAlbum = () => Network.mb_get('/album/newest')\n// 获取最新歌单\nexport const getNewestSong = () => Network.mb_get('/personalized/newsong')\n// 获取歌单详情\nexport const getPlayList = (data) => Network.mb_get('/playlist/detail', data)\n// 获取专辑详情\nexport const getAlbumDetail = (data) => Network.mb_get('/album', data)\n// 获取歌曲详情\nexport const getSongDetail = (data) => Network.mb_get('/song/detail', data)\n// 获取歌词\nexport const getSongLyric = (data) => Network.mb_get('/lyric', data)\n// 获取歌曲播放地址\nexport const getSongURL = (data) => Network.mb_get('/song/url', data)\n// 获取歌手详情\nexport const getArtistsDetail = (data) => Network.mb_get('/artists', data)\n// 获取热门歌手\nexport const getHotArtists = () => {\n    return new Promise((resolve, reject) => {\n        Network.mb_get('/top/artists?offset=0&limit=5')\n        .then((res)=>{\n            resolve(res.artists)\n        })\n        .catch((error)=>{\n            reject(error)\n        })\n    })\n}\n// 获取字母的歌手\nexport const getLettersArtists = (letter) => {\n    return new Promise((resolve, reject) => {\n        let letterArtists = []\n        Network.mb_all([\n            Network.mb_get(`artist/list?offset=0&limit=5&cat=1001&initial=${letter}`),\n            // 后面的都是一样的，cat参数已失效\n            // Network.mb_get(`artist/list?offset=0&limit=5&cat=2001&initial=${letter}`),\n            // Network.mb_get(`artist/list?offset=0&limit=5&cat=6001&initial=${letter}`),\n            // Network.mb_get(`artist/list?offset=0&limit=5&cat=7001&initial=${letter}`),\n            // Network.mb_get(`artist/list?offset=0&limit=5&cat=4001&initial=${letter}`),\n            // Network.mb_get(`artist/list?offset=0&limit=5&cat=5003&initial=${letter}`),\n        ])\n        .then(result => {\n            result.forEach(item => {\n                letterArtists.push(...item.artists)\n            });\n            resolve(letterArtists)\n        })\n        .catch(error => {\n            reject(error)\n        })\n    })\n}\n// 获取A-Z字母的歌手\nexport const getAllArtists = () => {\n    return new Promise((resolve, reject) => {\n        let keys = ['热']\n        let list = [getHotArtists()]\n        for (let i = 65; i < 91; i++) {\n            let char = String.fromCharCode(i)\n            keys.push(char)\n            list.push(getLettersArtists(char))\n        }\n        Network.mb_all(list)\n        .then(result => {\n            let obj = {}\n            obj.keys = keys\n            obj.list = result\n            resolve(obj) \n        })\n        .catch(err => {\n            reject(err)\n        })\n    })\n}"]}]}