{"remainingRequest":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/babel-loader/lib/index.js!/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/api/index.js","dependencies":[{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/api/index.js","mtime":1586259323688},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/cache-loader/dist/cjs.js","mtime":1584931130054},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/babel-loader/lib/index.js","mtime":1584931129970}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIi9Vc2Vycy9NYXhiL0Rlc2t0b3AvSFRNTDUvVnVlXHU1QjY2XHU0RTYwL2RheS0wMDQvbXlWdWVMZWFybi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgTmV0d29yayBmcm9tICIuL21ibmV0d29yayI7CmltcG9ydCB7IFByb21pc2UgfSBmcm9tICJjb3JlLWpzIjsgLy8g6I635Y+WQmFubmVy5pWw5o2uCgpleHBvcnQgdmFyIGdldE15QmFubmVyID0gZnVuY3Rpb24gZ2V0TXlCYW5uZXIoKSB7CiAgcmV0dXJuIE5ldHdvcmsubWJfZ2V0KCIvYmFubmVyP3R5cGU9MiIpOwp9OyAvLyDojrflj5bmjqjojZDmrYzljZUKCmV4cG9ydCB2YXIgZ2V0UGVyc29uYWxpemVkID0gZnVuY3Rpb24gZ2V0UGVyc29uYWxpemVkKCkgewogIHJldHVybiBOZXR3b3JrLm1iX2dldCgiL3BlcnNvbmFsaXplZD9saW1pdD0xMiIpOwp9OyAvLyDojrflj5bmnIDmlrDkuJPovpEKCmV4cG9ydCB2YXIgZ2V0TmV3ZXN0QWxidW0gPSBmdW5jdGlvbiBnZXROZXdlc3RBbGJ1bSgpIHsKICByZXR1cm4gTmV0d29yay5tYl9nZXQoIi9hbGJ1bS9uZXdlc3QiKTsKfTsgLy8g6I635Y+W5pyA5paw5q2M5Y2VCgpleHBvcnQgdmFyIGdldE5ld2VzdFNvbmcgPSBmdW5jdGlvbiBnZXROZXdlc3RTb25nKCkgewogIHJldHVybiBOZXR3b3JrLm1iX2dldCgiL3BlcnNvbmFsaXplZC9uZXdzb25nIik7Cn07IC8vIOiOt+WPluatjOWNleivpuaDhQoKZXhwb3J0IHZhciBnZXRQbGF5TGlzdCA9IGZ1bmN0aW9uIGdldFBsYXlMaXN0KGRhdGEpIHsKICByZXR1cm4gTmV0d29yay5tYl9nZXQoIi9wbGF5bGlzdC9kZXRhaWwiLCBkYXRhKTsKfTsgLy8g6I635Y+W5LiT6L6R6K+m5oOFCgpleHBvcnQgdmFyIGdldEFsYnVtRGV0YWlsID0gZnVuY3Rpb24gZ2V0QWxidW1EZXRhaWwoZGF0YSkgewogIHJldHVybiBOZXR3b3JrLm1iX2dldCgiL2FsYnVtIiwgZGF0YSk7Cn07IC8vIOiOt+WPluatjOabsuivpuaDhQoKZXhwb3J0IHZhciBnZXRTb25nRGV0YWlsID0gZnVuY3Rpb24gZ2V0U29uZ0RldGFpbChkYXRhKSB7CiAgcmV0dXJuIE5ldHdvcmsubWJfZ2V0KCIvc29uZy9kZXRhaWwiLCBkYXRhKTsKfTsgLy8g6I635Y+W5q2M6K+NCgpleHBvcnQgdmFyIGdldFNvbmdMeXJpYyA9IGZ1bmN0aW9uIGdldFNvbmdMeXJpYyhkYXRhKSB7CiAgcmV0dXJuIE5ldHdvcmsubWJfZ2V0KCIvbHlyaWMiLCBkYXRhKTsKfTsgLy8g6I635Y+W5q2M5puy5pKt5pS+5Zyw5Z2ACgpleHBvcnQgdmFyIGdldFNvbmdVUkwgPSBmdW5jdGlvbiBnZXRTb25nVVJMKGRhdGEpIHsKICByZXR1cm4gTmV0d29yay5tYl9nZXQoIi9zb25nL3VybCIsIGRhdGEpOwp9OyAvLyDojrflj5bmrYzmiYvor6bmg4UKCmV4cG9ydCB2YXIgZ2V0QXJ0aXN0c0RldGFpbCA9IGZ1bmN0aW9uIGdldEFydGlzdHNEZXRhaWwoZGF0YSkgewogIHJldHVybiBOZXR3b3JrLm1iX2dldCgiL2FydGlzdHMiLCBkYXRhKTsKfTsgLy8g6I635Y+W5qac5Y2V6K+m5oOF5YiX6KGoCgpleHBvcnQgdmFyIGdldFRvcExpc3QgPSBmdW5jdGlvbiBnZXRUb3BMaXN0KGRhdGEpIHsKICByZXR1cm4gTmV0d29yay5tYl9nZXQoIi90b3AvbGlzdCIsIGRhdGEpOwp9OyAvLyDmkJzntKLmrYzmm7IKCmV4cG9ydCB2YXIgZ2V0U2VhcmNoTGlzdCA9IGZ1bmN0aW9uIGdldFNlYXJjaExpc3QoZGF0YSkgewogIHJldHVybiBOZXR3b3JrLm1iX2dldCgiL3NlYXJjaD90eXBlPTEiLCBkYXRhKTsKfTsgLy8g6I635Y+W5qac5Y2V5YaF5a655pGY6KaBCgpleHBvcnQgdmFyIGdldFRvcExpc3REZXRhaWwgPSBmdW5jdGlvbiBnZXRUb3BMaXN0RGV0YWlsKCkgewogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICB2YXIgY2F0ZWdvcnkgPSB7CiAgICAgIG9mZmljaWFsTGlzdDogW3sKICAgICAgICBuYW1lOiAi5LqR6Z+z5LmQ6aOZ5Y2H5qacIiwKICAgICAgICBpZDogMwogICAgICB9LCB7CiAgICAgICAgbmFtZTogIuS6kemfs+S5kOaWsOatjOamnCIsCiAgICAgICAgaWQ6IDAKICAgICAgfSwgewogICAgICAgIG5hbWU6ICLnvZHmmJPljp/liJvmrYzmm7LmppwiLAogICAgICAgIGlkOiAyCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAi5LqR6Z+z5LmQ54Ot5q2M5qacIiwKICAgICAgICBpZDogMQogICAgICB9XSwKICAgICAgcmVjTGlzdDogW3sKICAgICAgICBuYW1lOiAi5LqR6Z+z5LmQ6K+05ZSx5qacIiwKICAgICAgICBpZDogMjMKICAgICAgfSwgewogICAgICAgIG5hbWU6ICLkupHpn7PkuZDnlLXpn7PmppwiLAogICAgICAgIGlkOiAyNQogICAgICB9LCB7CiAgICAgICAgbmFtZTogIuS6kemfs+S5kOasp+e+juaWsOatjOamnCIsCiAgICAgICAgaWQ6IDMyCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAi5oqW6Z+z5o6S6KGM5qacIiwKICAgICAgICBpZDogMjYKICAgICAgfSwgewogICAgICAgIG5hbWU6ICLkupHpn7PkuZBBQ0fpn7PkuZDmppwiLAogICAgICAgIGlkOiAyMgogICAgICB9LCB7CiAgICAgICAgbmFtZTogIuS6kemfs+S5kOWPpOWFuOmfs+S5kOamnCIsCiAgICAgICAgaWQ6IDI0CiAgICAgIH1dLAogICAgICBnbG9iYWxMaXN0OiBbewogICAgICAgIG5hbWU6ICLnvo7lm71CaWxsYm9hcmTlkajmppwiLAogICAgICAgIGlkOiA2CiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAiVUvmjpLooYzmppzlkajmppwiLAogICAgICAgIGlkOiA1CiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAiQmVhdHBvcnTlhajnkIPnlLXlrZDoiJ7mm7LmppwiLAogICAgICAgIGlkOiAyMQogICAgICB9LCB7CiAgICAgICAgbmFtZTogIuaXpeacrE9yaWNvbuWRqOamnCIsCiAgICAgICAgaWQ6IDEwCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAiaVR1bmVz5qacIiwKICAgICAgICBpZDogOAogICAgICB9LCB7CiAgICAgICAgbmFtZTogIuiLseWbvVHmnYLlv5fkuK3mlofniYjlkajmppwiLAogICAgICAgIGlkOiAyOQogICAgICB9XSwKICAgICAgb3RoZXJMaXN0OiBbewogICAgICAgIG5hbWU6ICJLVFbllJvmppwiLAogICAgICAgIGlkOiA3CiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAi5rOV5Zu9IE5SSiBWb3MgSGl0cyDlkajmppwiLAogICAgICAgIGlkOiAxOQogICAgICB9LCB7CiAgICAgICAgbmFtZTogIuaWsOWjsOamnCIsCiAgICAgICAgaWQ6IDI3CiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAi5LqR6Z+z5LmQ6Z+p6K+t5qacIiwKICAgICAgICBpZDogMjgKICAgICAgfSwgewogICAgICAgIG5hbWU6ICLnlLXnq57pn7PkuZDmppwiLAogICAgICAgIGlkOiAzMAogICAgICB9LCB7CiAgICAgICAgbmFtZTogIuS6kemfs+S5kOasp+e+jueDreatjOamnCIsCiAgICAgICAgaWQ6IDMxCiAgICAgIH1dLAogICAgICB0aXRsZXM6IHsKICAgICAgICBvZmZpY2lhbExpc3Q6ICLlrpjmlrnmppwiLAogICAgICAgIHJlY0xpc3Q6ICLmjqjojZDmppwiLAogICAgICAgIGdsb2JhbExpc3Q6ICLlhajnkIPmppwiLAogICAgICAgIG90aGVyTGlzdDogIuabtOWkmuamnOWNlSIKICAgICAgfQogICAgfTsKICAgIE5ldHdvcmsubWJfZ2V0KCIvdG9wbGlzdC9kZXRhaWwiKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIGRhdGEubGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChvYmopIHsKICAgICAgICB2YXIgZmxhZyA9IGZhbHNlOwoKICAgICAgICBmb3IgKHZhciBrZXkgaW4gY2F0ZWdvcnkpIHsKICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2F0ZWdvcnlba2V5XS5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBpZiAoY2F0ZWdvcnlba2V5XVtpXS5uYW1lID09PSBvYmoubmFtZSkgewogICAgICAgICAgICAgIGNhdGVnb3J5W2tleV1baV0ucmFuayA9IG9iajsKICAgICAgICAgICAgICBmbGFnID0gdHJ1ZTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGlmIChmbGFnKSB7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJlc29sdmUoY2F0ZWdvcnkpOwogICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIHJlamVjdChlcnJvcik7CiAgICB9KTsKICB9KTsKfTsgLy8g6I635Y+W54Ot6Zeo5q2M5omLCgpleHBvcnQgdmFyIGdldEhvdEFydGlzdHMgPSBmdW5jdGlvbiBnZXRIb3RBcnRpc3RzKCkgewogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBOZXR3b3JrLm1iX2dldCgiL3RvcC9hcnRpc3RzP29mZnNldD0wJmxpbWl0PTUiKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgcmVzb2x2ZShyZXMuYXJ0aXN0cyk7CiAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgcmVqZWN0KGVycm9yKTsKICAgIH0pOwogIH0pOwp9OyAvLyDojrflj5blrZfmr43nmoTmrYzmiYsKCmV4cG9ydCB2YXIgZ2V0TGV0dGVyc0FydGlzdHMgPSBmdW5jdGlvbiBnZXRMZXR0ZXJzQXJ0aXN0cyhsZXR0ZXIpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgdmFyIGxldHRlckFydGlzdHMgPSBbXTsKICAgIE5ldHdvcmsubWJfYWxsKFtOZXR3b3JrLm1iX2dldCgiYXJ0aXN0L2xpc3Q/b2Zmc2V0PTAmbGltaXQ9NSZjYXQ9MTAwMSZpbml0aWFsPSIuY29uY2F0KGxldHRlcikpIC8vIOWQjumdoueahOmDveaYr+S4gOagt+eahO+8jGNhdOWPguaVsOW3suWkseaViAogICAgLy8gTmV0d29yay5tYl9nZXQoYGFydGlzdC9saXN0P29mZnNldD0wJmxpbWl0PTUmY2F0PTIwMDEmaW5pdGlhbD0ke2xldHRlcn1gKSwKICAgIC8vIE5ldHdvcmsubWJfZ2V0KGBhcnRpc3QvbGlzdD9vZmZzZXQ9MCZsaW1pdD01JmNhdD02MDAxJmluaXRpYWw9JHtsZXR0ZXJ9YCksCiAgICAvLyBOZXR3b3JrLm1iX2dldChgYXJ0aXN0L2xpc3Q/b2Zmc2V0PTAmbGltaXQ9NSZjYXQ9NzAwMSZpbml0aWFsPSR7bGV0dGVyfWApLAogICAgLy8gTmV0d29yay5tYl9nZXQoYGFydGlzdC9saXN0P29mZnNldD0wJmxpbWl0PTUmY2F0PTQwMDEmaW5pdGlhbD0ke2xldHRlcn1gKSwKICAgIC8vIE5ldHdvcmsubWJfZ2V0KGBhcnRpc3QvbGlzdD9vZmZzZXQ9MCZsaW1pdD01JmNhdD01MDAzJmluaXRpYWw9JHtsZXR0ZXJ9YCksCiAgICBdKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgcmVzdWx0LmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBsZXR0ZXJBcnRpc3RzLnB1c2guYXBwbHkobGV0dGVyQXJ0aXN0cywgX3RvQ29uc3VtYWJsZUFycmF5KGl0ZW0uYXJ0aXN0cykpOwogICAgICB9KTsKICAgICAgcmVzb2x2ZShsZXR0ZXJBcnRpc3RzKTsKICAgIH0pWyJjYXRjaCJdKGZ1bmN0aW9uIChlcnJvcikgewogICAgICByZWplY3QoZXJyb3IpOwogICAgfSk7CiAgfSk7Cn07IC8vIOiOt+WPlkEtWuWtl+avjeeahOatjOaJiwoKZXhwb3J0IHZhciBnZXRBbGxBcnRpc3RzID0gZnVuY3Rpb24gZ2V0QWxsQXJ0aXN0cygpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgdmFyIGtleXMgPSBbIueDrSJdOwogICAgdmFyIGxpc3QgPSBbZ2V0SG90QXJ0aXN0cygpXTsKCiAgICBmb3IgKHZhciBpID0gNjU7IGkgPCA5MTsgaSsrKSB7CiAgICAgIHZhciBfY2hhciA9IFN0cmluZy5mcm9tQ2hhckNvZGUoaSk7CgogICAgICBrZXlzLnB1c2goX2NoYXIpOwogICAgICBsaXN0LnB1c2goZ2V0TGV0dGVyc0FydGlzdHMoX2NoYXIpKTsKICAgIH0KCiAgICBOZXR3b3JrLm1iX2FsbChsaXN0KS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgdmFyIG9iaiA9IHt9OwogICAgICBvYmoua2V5cyA9IGtleXM7CiAgICAgIG9iai5saXN0ID0gcmVzdWx0OwogICAgICByZXNvbHZlKG9iaik7CiAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyKSB7CiAgICAgIHJlamVjdChlcnIpOwogICAgfSk7CiAgfSk7Cn07"},{"version":3,"sources":["/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/api/index.js"],"names":["Network","Promise","getMyBanner","mb_get","getPersonalized","getNewestAlbum","getNewestSong","getPlayList","data","getAlbumDetail","getSongDetail","getSongLyric","getSongURL","getArtistsDetail","getTopList","getSearchList","getTopListDetail","resolve","reject","category","officialList","name","id","recList","globalList","otherList","titles","then","list","forEach","obj","flag","key","i","length","rank","error","getHotArtists","res","artists","getLettersArtists","letter","letterArtists","mb_all","result","item","push","getAllArtists","keys","char","String","fromCharCode","err"],"mappings":";;;;;AAAA,OAAOA,OAAP,MAAoB,aAApB;AACA,SAASC,OAAT,QAAwB,SAAxB,C,CAEA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAMF,OAAO,CAACG,MAAR,CAAe,gBAAf,CAAN;AAAA,CAApB,C,CACP;;AACA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAMJ,OAAO,CAACG,MAAR,CAAe,wBAAf,CAAN;AAAA,CAAxB,C,CACP;;AACA,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAML,OAAO,CAACG,MAAR,CAAe,eAAf,CAAN;AAAA,CAAvB,C,CACP;;AACA,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAMN,OAAO,CAACG,MAAR,CAAe,uBAAf,CAAN;AAAA,CAAtB,C,CACP;;AACA,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI;AAAA,SAAIR,OAAO,CAACG,MAAR,CAAe,kBAAf,EAAmCK,IAAnC,CAAJ;AAAA,CAAxB,C,CACP;;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAD,IAAI;AAAA,SAAIR,OAAO,CAACG,MAAR,CAAe,QAAf,EAAyBK,IAAzB,CAAJ;AAAA,CAA3B,C,CACP;;AACA,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAF,IAAI;AAAA,SAAIR,OAAO,CAACG,MAAR,CAAe,cAAf,EAA+BK,IAA/B,CAAJ;AAAA,CAA1B,C,CACP;;AACA,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAAAH,IAAI;AAAA,SAAIR,OAAO,CAACG,MAAR,CAAe,QAAf,EAAyBK,IAAzB,CAAJ;AAAA,CAAzB,C,CACP;;AACA,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAAAJ,IAAI;AAAA,SAAIR,OAAO,CAACG,MAAR,CAAe,WAAf,EAA4BK,IAA5B,CAAJ;AAAA,CAAvB,C,CACP;;AACA,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAL,IAAI;AAAA,SAAIR,OAAO,CAACG,MAAR,CAAe,UAAf,EAA2BK,IAA3B,CAAJ;AAAA,CAA7B,C,CACP;;AACA,OAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAAAN,IAAI;AAAA,SAAIR,OAAO,CAACG,MAAR,CAAe,WAAf,EAA4BK,IAA5B,CAAJ;AAAA,CAAvB,C,CACP;;AACA,OAAO,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAAAP,IAAI;AAAA,SAAIR,OAAO,CAACG,MAAR,CAAe,gBAAf,EAAiCK,IAAjC,CAAJ;AAAA,CAA1B,C,CACP;;AACA,OAAO,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACpC,SAAO,IAAIf,OAAJ,CAAY,UAACgB,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIC,QAAQ,GAAG;AACbC,MAAAA,YAAY,EAAE,CACZ;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,EAAE,EAAE;AAAtB,OADY,EAEZ;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,EAAE,EAAE;AAAtB,OAFY,EAGZ;AAAED,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,EAAE,EAAE;AAAvB,OAHY,EAIZ;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,EAAE,EAAE;AAAtB,OAJY,CADD;AAObC,MAAAA,OAAO,EAAE,CACP;AAAEF,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,EAAE,EAAE;AAAtB,OADO,EAEP;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,EAAE,EAAE;AAAtB,OAFO,EAGP;AAAED,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,EAAE,EAAE;AAAxB,OAHO,EAIP;AAAED,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,EAAE,EAAE;AAArB,OAJO,EAKP;AAAED,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,EAAE,EAAE;AAAzB,OALO,EAMP;AAAED,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,EAAE,EAAE;AAAxB,OANO,CAPI;AAebE,MAAAA,UAAU,EAAE,CACV;AAAEH,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,EAAE,EAAE;AAA7B,OADU,EAEV;AAAED,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,EAAE,EAAE;AAAvB,OAFU,EAGV;AAAED,QAAAA,IAAI,EAAE,iBAAR;AAA2BC,QAAAA,EAAE,EAAE;AAA/B,OAHU,EAIV;AAAED,QAAAA,IAAI,EAAE,YAAR;AAAsBC,QAAAA,EAAE,EAAE;AAA1B,OAJU,EAKV;AAAED,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,EAAE,EAAE;AAAvB,OALU,EAMV;AAAED,QAAAA,IAAI,EAAE,YAAR;AAAsBC,QAAAA,EAAE,EAAE;AAA1B,OANU,CAfC;AAuBbG,MAAAA,SAAS,EAAE,CACT;AAAEJ,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,EAAE,EAAE;AAArB,OADS,EAET;AAAED,QAAAA,IAAI,EAAE,oBAAR;AAA8BC,QAAAA,EAAE,EAAE;AAAlC,OAFS,EAGT;AAAED,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,EAAE,EAAE;AAAnB,OAHS,EAIT;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,EAAE,EAAE;AAAtB,OAJS,EAKT;AAAED,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,EAAE,EAAE;AAArB,OALS,EAMT;AAAED,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,EAAE,EAAE;AAAxB,OANS,CAvBE;AA+BbI,MAAAA,MAAM,EAAE;AACNN,QAAAA,YAAY,EAAE,KADR;AAENG,QAAAA,OAAO,EAAE,KAFH;AAGNC,QAAAA,UAAU,EAAE,KAHN;AAINC,QAAAA,SAAS,EAAE;AAJL;AA/BK,KAAf;AAsCAzB,IAAAA,OAAO,CAACG,MAAR,CAAe,iBAAf,EACGwB,IADH,CACQ,UAAAnB,IAAI,EAAI;AACVA,MAAAA,IAAI,CAACoB,IAAL,CAAUC,OAAV,CAAkB,UAAAC,GAAG,EAAI;AACrB,YAAIC,IAAI,GAAG,KAAX;;AACA,aAAK,IAAMC,GAAX,IAAkBb,QAAlB,EAA4B;AACxB,eAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,QAAQ,CAACa,GAAD,CAAR,CAAcE,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,gBAAId,QAAQ,CAACa,GAAD,CAAR,CAAcC,CAAd,EAAiBZ,IAAjB,KAA0BS,GAAG,CAACT,IAAlC,EAAwC;AACtCF,cAAAA,QAAQ,CAACa,GAAD,CAAR,CAAcC,CAAd,EAAiBE,IAAjB,GAAwBL,GAAxB;AACAC,cAAAA,IAAI,GAAG,IAAP;AACA;AACD;AACJ;;AACD,cAAIA,IAAJ,EAAU;AACN;AACH;AACJ;AACJ,OAdD;AAeAd,MAAAA,OAAO,CAACE,QAAD,CAAP;AACH,KAlBH,WAmBS,UAAAiB,KAAK,EAAI;AACdlB,MAAAA,MAAM,CAACkB,KAAD,CAAN;AACD,KArBH;AAsBD,GA7DM,CAAP;AA8DD,CA/DM,C,CAiEP;;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,SAAO,IAAIpC,OAAJ,CAAY,UAACgB,OAAD,EAAUC,MAAV,EAAqB;AACtClB,IAAAA,OAAO,CAACG,MAAR,CAAe,+BAAf,EACGwB,IADH,CACQ,UAAAW,GAAG,EAAI;AACXrB,MAAAA,OAAO,CAACqB,GAAG,CAACC,OAAL,CAAP;AACD,KAHH,WAIS,UAAAH,KAAK,EAAI;AACdlB,MAAAA,MAAM,CAACkB,KAAD,CAAN;AACD,KANH;AAOD,GARM,CAAP;AASD,CAVM,C,CAWP;;AACA,OAAO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,MAAM,EAAI;AACzC,SAAO,IAAIxC,OAAJ,CAAY,UAACgB,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIwB,aAAa,GAAG,EAApB;AACA1C,IAAAA,OAAO,CAAC2C,MAAR,CAAe,CACb3C,OAAO,CAACG,MAAR,yDAAgEsC,MAAhE,EADa,CAEb;AACA;AACA;AACA;AACA;AACA;AAPa,KAAf,EASGd,IATH,CASQ,UAAAiB,MAAM,EAAI;AACdA,MAAAA,MAAM,CAACf,OAAP,CAAe,UAAAgB,IAAI,EAAI;AACrBH,QAAAA,aAAa,CAACI,IAAd,OAAAJ,aAAa,qBAASG,IAAI,CAACN,OAAd,EAAb;AACD,OAFD;AAGAtB,MAAAA,OAAO,CAACyB,aAAD,CAAP;AACD,KAdH,WAeS,UAAAN,KAAK,EAAI;AACdlB,MAAAA,MAAM,CAACkB,KAAD,CAAN;AACD,KAjBH;AAkBD,GApBM,CAAP;AAqBD,CAtBM,C,CAuBP;;AACA,OAAO,IAAMW,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,SAAO,IAAI9C,OAAJ,CAAY,UAACgB,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAI8B,IAAI,GAAG,CAAC,GAAD,CAAX;AACA,QAAIpB,IAAI,GAAG,CAACS,aAAa,EAAd,CAAX;;AACA,SAAK,IAAIJ,CAAC,GAAG,EAAb,EAAiBA,CAAC,GAAG,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,UAAIgB,KAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBlB,CAApB,CAAX;;AACAe,MAAAA,IAAI,CAACF,IAAL,CAAUG,KAAV;AACArB,MAAAA,IAAI,CAACkB,IAAL,CAAUN,iBAAiB,CAACS,KAAD,CAA3B;AACD;;AACDjD,IAAAA,OAAO,CAAC2C,MAAR,CAAef,IAAf,EACGD,IADH,CACQ,UAAAiB,MAAM,EAAI;AACd,UAAId,GAAG,GAAG,EAAV;AACAA,MAAAA,GAAG,CAACkB,IAAJ,GAAWA,IAAX;AACAlB,MAAAA,GAAG,CAACF,IAAJ,GAAWgB,MAAX;AACA3B,MAAAA,OAAO,CAACa,GAAD,CAAP;AACD,KANH,WAOS,UAAAsB,GAAG,EAAI;AACZlC,MAAAA,MAAM,CAACkC,GAAD,CAAN;AACD,KATH;AAUD,GAlBM,CAAP;AAmBD,CApBM","sourcesContent":["import Network from \"./mbnetwork\";\nimport { Promise } from \"core-js\";\n\n// 获取Banner数据\nexport const getMyBanner = () => Network.mb_get(\"/banner?type=2\");\n// 获取推荐歌单\nexport const getPersonalized = () => Network.mb_get(\"/personalized?limit=12\");\n// 获取最新专辑\nexport const getNewestAlbum = () => Network.mb_get(\"/album/newest\");\n// 获取最新歌单\nexport const getNewestSong = () => Network.mb_get(\"/personalized/newsong\");\n// 获取歌单详情\nexport const getPlayList = data => Network.mb_get(\"/playlist/detail\", data);\n// 获取专辑详情\nexport const getAlbumDetail = data => Network.mb_get(\"/album\", data);\n// 获取歌曲详情\nexport const getSongDetail = data => Network.mb_get(\"/song/detail\", data);\n// 获取歌词\nexport const getSongLyric = data => Network.mb_get(\"/lyric\", data);\n// 获取歌曲播放地址\nexport const getSongURL = data => Network.mb_get(\"/song/url\", data);\n// 获取歌手详情\nexport const getArtistsDetail = data => Network.mb_get(\"/artists\", data);\n// 获取榜单详情列表\nexport const getTopList = data => Network.mb_get(\"/top/list\", data);\n// 搜索歌曲\nexport const getSearchList = data => Network.mb_get(\"/search?type=1\", data);\n// 获取榜单内容摘要\nexport const getTopListDetail = () => {\n  return new Promise((resolve, reject) => {\n    let category = {\n      officialList: [\n        { name: \"云音乐飙升榜\", id: 3 },\n        { name: \"云音乐新歌榜\", id: 0 },\n        { name: \"网易原创歌曲榜\", id: 2 },\n        { name: \"云音乐热歌榜\", id: 1 }\n      ],\n      recList: [\n        { name: \"云音乐说唱榜\", id: 23 },\n        { name: \"云音乐电音榜\", id: 25 },\n        { name: \"云音乐欧美新歌榜\", id: 32 },\n        { name: \"抖音排行榜\", id: 26 },\n        { name: \"云音乐ACG音乐榜\", id: 22 },\n        { name: \"云音乐古典音乐榜\", id: 24 }\n      ],\n      globalList: [\n        { name: \"美国Billboard周榜\", id: 6 },\n        { name: \"UK排行榜周榜\", id: 5 },\n        { name: \"Beatport全球电子舞曲榜\", id: 21 },\n        { name: \"日本Oricon周榜\", id: 10 },\n        { name: \"iTunes榜\", id: 8 },\n        { name: \"英国Q杂志中文版周榜\", id: 29 }\n      ],\n      otherList: [\n        { name: \"KTV唛榜\", id: 7 },\n        { name: \"法国 NRJ Vos Hits 周榜\", id: 19 },\n        { name: \"新声榜\", id: 27 },\n        { name: \"云音乐韩语榜\", id: 28 },\n        { name: \"电竞音乐榜\", id: 30 },\n        { name: \"云音乐欧美热歌榜\", id: 31 }\n      ],\n      titles: {\n        officialList: \"官方榜\",\n        recList: \"推荐榜\",\n        globalList: \"全球榜\",\n        otherList: \"更多榜单\"\n      }\n    };\n    Network.mb_get(\"/toplist/detail\")\n      .then(data => {\n          data.list.forEach(obj => {\n              let flag = false\n              for (const key in category) {\n                  for (let i = 0; i < category[key].length; i++) {\n                      if (category[key][i].name === obj.name) {\n                        category[key][i].rank = obj\n                        flag = true\n                        break\n                      }\n                  }\n                  if (flag) {\n                      break\n                  }\n              }\n          })\n          resolve(category)\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n};\n\n// 获取热门歌手\nexport const getHotArtists = () => {\n  return new Promise((resolve, reject) => {\n    Network.mb_get(\"/top/artists?offset=0&limit=5\")\n      .then(res => {\n        resolve(res.artists);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n};\n// 获取字母的歌手\nexport const getLettersArtists = letter => {\n  return new Promise((resolve, reject) => {\n    let letterArtists = [];\n    Network.mb_all([\n      Network.mb_get(`artist/list?offset=0&limit=5&cat=1001&initial=${letter}`)\n      // 后面的都是一样的，cat参数已失效\n      // Network.mb_get(`artist/list?offset=0&limit=5&cat=2001&initial=${letter}`),\n      // Network.mb_get(`artist/list?offset=0&limit=5&cat=6001&initial=${letter}`),\n      // Network.mb_get(`artist/list?offset=0&limit=5&cat=7001&initial=${letter}`),\n      // Network.mb_get(`artist/list?offset=0&limit=5&cat=4001&initial=${letter}`),\n      // Network.mb_get(`artist/list?offset=0&limit=5&cat=5003&initial=${letter}`),\n    ])\n      .then(result => {\n        result.forEach(item => {\n          letterArtists.push(...item.artists);\n        });\n        resolve(letterArtists);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n};\n// 获取A-Z字母的歌手\nexport const getAllArtists = () => {\n  return new Promise((resolve, reject) => {\n    let keys = [\"热\"];\n    let list = [getHotArtists()];\n    for (let i = 65; i < 91; i++) {\n      let char = String.fromCharCode(i);\n      keys.push(char);\n      list.push(getLettersArtists(char));\n    }\n    Network.mb_all(list)\n      .then(result => {\n        let obj = {};\n        obj.keys = keys;\n        obj.list = result;\n        resolve(obj);\n      })\n      .catch(err => {\n        reject(err);\n      });\n  });\n};\n"]}]}