{"remainingRequest":"/Users/boduoduo/Desktop/学习/myVueLearn/node_modules/babel-loader/lib/index.js!/Users/boduoduo/Desktop/学习/myVueLearn/src/store/actions.js","dependencies":[{"path":"/Users/boduoduo/Desktop/学习/myVueLearn/src/store/actions.js","mtime":1585412418641},{"path":"/Users/boduoduo/Desktop/学习/myVueLearn/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/boduoduo/Desktop/学习/myVueLearn/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnBhcnNlLWludCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9Vc2Vycy9ib2R1b2R1by9EZXNrdG9wL1x1NUI2Nlx1NEU2MC9teVZ1ZUxlYXJuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9ib2R1b2R1by9EZXNrdG9wL1x1NUI2Nlx1NEU2MC9teVZ1ZUxlYXJuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHsgU0VUX0ZVTExfU0NSRUVOLCBTRVRfTUlOSV9QTEFZRVIsIFNFVF9JU19QTEFZSU5HLCBTRVRfTU9ERV9UWVBFLCBTRVRfTElTVF9QTEFZRVIsIFNFVF9TT05HX0RFVEFJTCwgU0VUX1NPTkdfTFlSSUMsIFNFVF9ERUxfU09ORywgU0VUX0NVUlJFTlRfSU5ERVggfSBmcm9tICcuL211dGF0aW9ucy10eXBlJzsKaW1wb3J0IHsgZ2V0U29uZ0RldGFpbCwgZ2V0U29uZ0x5cmljIGFzIF9nZXRTb25nTHlyaWMsIGdldFNvbmdVUkwgfSBmcm9tICcuLi9hcGkvaW5kZXgnOwpleHBvcnQgZGVmYXVsdCBfZGVmaW5lUHJvcGVydHkoewogIHNldEZ1bGxTY3JlZW46IGZ1bmN0aW9uIHNldEZ1bGxTY3JlZW4oX3JlZiwgZmxhZykgewogICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgY29tbWl0KFNFVF9GVUxMX1NDUkVFTiwgZmxhZyk7CiAgfSwKICBzZXRNaW5pUGxheWVyOiBmdW5jdGlvbiBzZXRNaW5pUGxheWVyKF9yZWYyLCBmbGFnKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgY29tbWl0KFNFVF9NSU5JX1BMQVlFUiwgZmxhZyk7CiAgfSwKICBzZXRJc1BsYXlpbmc6IGZ1bmN0aW9uIHNldElzUGxheWluZyhfcmVmMywgZmxhZykgewogICAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgIGNvbW1pdChTRVRfSVNfUExBWUlORywgZmxhZyk7CiAgfSwKICBzZXRNb2RlVHlwZTogZnVuY3Rpb24gc2V0TW9kZVR5cGUoX3JlZjQsIHR5cGUpIHsKICAgIHZhciBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICBjb21taXQoU0VUX01PREVfVFlQRSwgdHlwZSk7CiAgfSwKICBzZXRMaXN0UGxheWVyOiBmdW5jdGlvbiBzZXRMaXN0UGxheWVyKF9yZWY1LCBmbGFnKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjUuY29tbWl0OwogICAgY29tbWl0KFNFVF9MSVNUX1BMQVlFUiwgZmxhZyk7CiAgfSwKICBzZXRTb25nRGV0YWlsOiBmdW5jdGlvbiBzZXRTb25nRGV0YWlsKF9yZWY2LCBpZHMpIHsKICAgIHZhciBjb21taXQgPSBfcmVmNi5jb21taXQ7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcmVzdWx0LCB1cmxzLCBsaXN0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGdldFNvbmdEZXRhaWwoewogICAgICAgICAgICAgICAgaWRzOiBpZHMuam9pbignLCcpCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gZ2V0U29uZ1VSTCh7CiAgICAgICAgICAgICAgICBpZDogaWRzLmpvaW4oJywnKQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHVybHMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGxpc3QgPSBbXTsKICAgICAgICAgICAgICByZXN1bHQuc29uZ3MuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUsIGkpIHsKICAgICAgICAgICAgICAgIHZhciBvYmogPSB7fTsKICAgICAgICAgICAgICAgIG9iai5pZCA9IHZhbHVlLmlkOwogICAgICAgICAgICAgICAgb2JqLm5hbWUgPSB2YWx1ZS5uYW1lOwogICAgICAgICAgICAgICAgb2JqLnVybCA9IHVybHMuZGF0YVtpXS51cmw7CiAgICAgICAgICAgICAgICB2YXIgc2luZ2VyID0gJyc7CiAgICAgICAgICAgICAgICB2YWx1ZVsnYXInXS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgICAgICAgICAgICBpZiAoaW5kZXggPT0gMCkgewogICAgICAgICAgICAgICAgICAgIHNpbmdlciA9IGl0ZW0ubmFtZTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBzaW5nZXIgKz0gJy0nICsgaXRlbS5uYW1lOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIG9iai5zaW5nZXIgPSBzaW5nZXI7CiAgICAgICAgICAgICAgICBvYmoucGljVXJsID0gdmFsdWVbJ2FsJ10ucGljVXJsOwogICAgICAgICAgICAgICAgbGlzdC5wdXNoKG9iaik7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgY29tbWl0KFNFVF9TT05HX0RFVEFJTCwgbGlzdCk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBnZXRTb25nTHlyaWM6IGZ1bmN0aW9uIGdldFNvbmdMeXJpYyhfcmVmNywgaWQpIHsKICAgIHZhciBjb21taXQgPSBfcmVmNy5jb21taXQ7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIHJlc3VsdCwgb2JqOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gX2dldFNvbmdMeXJpYyh7CiAgICAgICAgICAgICAgICBpZDogaWQKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBvYmogPSBwYXJzZUx5cmljKHJlc3VsdC5scmMubHlyaWMpOwogICAgICAgICAgICAgIGNvbW1pdChTRVRfU09OR19MWVJJQywgb2JqKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgc2V0RGVsU29uZzogZnVuY3Rpb24gc2V0RGVsU29uZyhfcmVmOCwgaW5kZXgpIHsKICAgIHZhciBjb21taXQgPSBfcmVmOC5jb21taXQ7CiAgICBjb21taXQoU0VUX0RFTF9TT05HLCBpbmRleCk7CiAgfQp9LCAic2V0RGVsU29uZyIsIGZ1bmN0aW9uIHNldERlbFNvbmcoX3JlZjksIGluZGV4KSB7CiAgdmFyIGNvbW1pdCA9IF9yZWY5LmNvbW1pdDsKICBjb21taXQoU0VUX0NVUlJFTlRfSU5ERVgsIGluZGV4KTsKfSk7IC8vIOagvOW8j+WMluatjOivjeaWueazlQoKZnVuY3Rpb24gcGFyc2VMeXJpYyhscmMpIHsKICB2YXIgbHlyaWNzID0gbHJjLnNwbGl0KCdcbicpOyAvLyBbMDA6MDAuMDAwXSDkvZzmm7IgOiDmnpfkv4rmnbAKICAvLyAxLuWumuS5ieato+WImeihqOi+vuW8j+aPkOWPllswMDowMC4wMDBdCgogIHZhciByZWcxID0gL1xbXGQqOlxkKlwuXGQqXF0vZzsgLy8gMi7lrprkuYnmraPliJnooajovr7lvI/mj5Dlj5YgWzAwCgogIHZhciByZWcyID0gL1xbXGQqL2k7IC8vIDMu5a6a5LmJ5q2j5YiZ6KGo6L6+5byP5o+Q5Y+WIDowMAoKICB2YXIgcmVnMyA9IC9cOlxkKi9pOyAvLyA0LuWumuS5ieWvueixoeS/neWtmOWkhOeQhuWlveeahOatjOivjQoKICB2YXIgbHlyaWNPYmogPSB7fTsKICBseXJpY3MuZm9yRWFjaChmdW5jdGlvbiAobHlyaWMpIHsKICAgIC8vIDEu5o+Q5Y+W5pe26Ze0CiAgICB2YXIgdGltZVN0ciA9IGx5cmljLm1hdGNoKHJlZzEpOwoKICAgIGlmICghdGltZVN0cikgewogICAgICByZXR1cm47CiAgICB9CgogICAgdGltZVN0ciA9IHRpbWVTdHJbMF07IC8vIDIu5o+Q5Y+W5YiG6ZKfCgogICAgdmFyIG1pblN0ciA9IHRpbWVTdHIubWF0Y2gocmVnMilbMF0uc3Vic3RyKDEpOyAvLyAzLuaPkOWPluenkumSnwoKICAgIHZhciBzZWNvbmRTdHIgPSB0aW1lU3RyLm1hdGNoKHJlZzMpWzBdLnN1YnN0cigxKTsgLy8gNC7lkIjlubbml7bpl7QsIOWwhuWIhumSn+WSjOenkumSn+mDveWQiOW5tuS4uuenkumSnwoKICAgIHZhciB0aW1lID0gcGFyc2VJbnQobWluU3RyKSAqIDYwICsgcGFyc2VJbnQoc2Vjb25kU3RyKTsgLy8gNS7lpITnkIbmrYzor40KCiAgICB2YXIgdGV4dCA9IGx5cmljLnJlcGxhY2UocmVnMSwgJycpLnRyaW0oKTsgLy8gNi7kv53lrZjmlbDmja4KCiAgICBseXJpY09ialt0aW1lXSA9IHRleHQ7CiAgfSk7CiAgcmV0dXJuIGx5cmljT2JqOwp9"},{"version":3,"sources":["/Users/boduoduo/Desktop/学习/myVueLearn/src/store/actions.js"],"names":["SET_FULL_SCREEN","SET_MINI_PLAYER","SET_IS_PLAYING","SET_MODE_TYPE","SET_LIST_PLAYER","SET_SONG_DETAIL","SET_SONG_LYRIC","SET_DEL_SONG","SET_CURRENT_INDEX","getSongDetail","getSongLyric","getSongURL","setFullScreen","flag","commit","setMiniPlayer","setIsPlaying","setModeType","type","setListPlayer","setSongDetail","ids","join","result","id","urls","list","songs","forEach","value","i","obj","name","url","data","singer","item","index","picUrl","push","parseLyric","lrc","lyric","setDelSong","lyrics","split","reg1","reg2","reg3","lyricObj","timeStr","match","minStr","substr","secondStr","time","parseInt","text","replace","trim"],"mappings":"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","sourcesContent":["import { \n    SET_FULL_SCREEN,\n    SET_MINI_PLAYER, \n    SET_IS_PLAYING, \n    SET_MODE_TYPE, \n    SET_LIST_PLAYER, \n    SET_SONG_DETAIL,\n    SET_SONG_LYRIC,\n    SET_DEL_SONG,\n    SET_CURRENT_INDEX \n} from './mutations-type'\n\nimport { getSongDetail, getSongLyric, getSongURL } from '../api/index'\n\nexport default {\n    setFullScreen ({ commit }, flag) {\n        commit(SET_FULL_SCREEN, flag )\n    },\n\n    setMiniPlayer ({ commit }, flag) {\n        commit(SET_MINI_PLAYER, flag )\n    },\n\n    setIsPlaying ({ commit }, flag) {\n        commit(SET_IS_PLAYING, flag )\n    },\n\n    setModeType ({ commit }, type) {\n        commit(SET_MODE_TYPE, type)\n    },\n\n    setListPlayer ({ commit }, flag) {\n        commit(SET_LIST_PLAYER, flag)\n    },\n\n    async setSongDetail ({ commit }, ids) {\n        let result = await getSongDetail({ids: ids.join(',')})\n        let urls = await getSongURL({id: ids.join(',')})\n        let list = []\n        result.songs.forEach((value, i) => {\n            let obj = {}\n            obj.id = value.id\n            obj.name = value.name\n            obj.url = urls.data[i].url\n            let singer = ''\n            value['ar'].forEach((item, index) => {\n                if (index == 0) {\n                    singer = item.name\n                }else {\n                    singer += '-' + item.name\n                }\n            })\n            obj.singer = singer \n            obj.picUrl = value['al'].picUrl\n            list.push(obj)\n        })\n        commit(SET_SONG_DETAIL, list)\n    },\n\n    async getSongLyric ({ commit }, id) {\n        let result = await getSongLyric({id: id})\n        let obj = parseLyric(result.lrc.lyric)\n        commit(SET_SONG_LYRIC, obj)\n    },\n\n    setDelSong({ commit }, index) {\n        commit(SET_DEL_SONG, index)\n    },\n\n    \n    setDelSong({ commit }, index) {\n        commit(SET_CURRENT_INDEX, index)\n    },\n}\n\n// 格式化歌词方法\nfunction parseLyric (lrc) {\n    let lyrics = lrc.split('\\n')\n    // [00:00.000] 作曲 : 林俊杰\n    // 1.定义正则表达式提取[00:00.000]\n    let reg1 = /\\[\\d*:\\d*\\.\\d*\\]/g\n    // 2.定义正则表达式提取 [00\n    let reg2 = /\\[\\d*/i\n    // 3.定义正则表达式提取 :00\n    let reg3 = /\\:\\d*/i\n    // 4.定义对象保存处理好的歌词\n    let lyricObj = {}\n    lyrics.forEach(function (lyric) {\n      // 1.提取时间\n      let timeStr = lyric.match(reg1)\n      if (!timeStr) { return }\n      timeStr = timeStr[0]\n      // 2.提取分钟\n      let minStr = timeStr.match(reg2)[0].substr(1)\n      // 3.提取秒钟\n      let secondStr = timeStr.match(reg3)[0].substr(1)\n      // 4.合并时间, 将分钟和秒钟都合并为秒钟\n      let time = parseInt(minStr) * 60 + parseInt(secondStr)\n      // 5.处理歌词\n      let text = lyric.replace(reg1, '').trim()\n      // 6.保存数据\n      lyricObj[time] = text\n    })\n    return lyricObj\n}"]}]}