{"remainingRequest":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/babel-loader/lib/index.js!/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/tools/tool.js","dependencies":[{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/tools/tool.js","mtime":1585533291945},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/cache-loader/dist/cjs.js","mtime":1584931130054},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/babel-loader/lib/index.js","mtime":1584931129970}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IHZhciBmb3JtYXJ0VGltZSA9IGZ1bmN0aW9uIGZvcm1hcnRUaW1lKHRpbWUpIHsKICAvLyAyLuW+l+WIsOS4pOS4quaXtumXtOS5i+mXtOeahOW3ruWAvCjnp5IpCiAgdmFyIGRpZmZlclNlY29uZCA9IHRpbWU7IC8vIDMu5Yip55So55u45beu55qE5oC756eS5pWwIC8g5q+P5LiA5aSp55qE56eS5pWwID0g55u45beu55qE5aSp5pWwCgogIHZhciBkYXkgPSBNYXRoLmZsb29yKGRpZmZlclNlY29uZCAvICg2MCAqIDYwICogMjQpKTsKICBkYXkgPSBkYXkgPj0gMTAgPyBkYXkgOiAnMCcgKyBkYXk7IC8vIDQu5Yip55So55u45beu55qE5oC756eS5pWwIC8g5bCP5pe2ICUgMjQ7CgogIHZhciBob3VyID0gTWF0aC5mbG9vcihkaWZmZXJTZWNvbmQgLyAoNjAgKiA2MCkgJSAyNCk7CiAgaG91ciA9IGhvdXIgPj0gMTAgPyBob3VyIDogJzAnICsgaG91cjsgLy8gNS7liKnnlKjnm7jlt67nmoTmgLvnp5LmlbAgLyDliIbpkp8gJSA2MDsKCiAgdmFyIG1pbnV0ZSA9IE1hdGguZmxvb3IoZGlmZmVyU2Vjb25kIC8gNjAgJSA2MCk7CiAgbWludXRlID0gbWludXRlID49IDEwID8gbWludXRlIDogJzAnICsgbWludXRlOyAvLyA2LuWIqeeUqOebuOW3rueahOaAu+enkuaVsCAlIOenkuaVsAoKICB2YXIgc2Vjb25kID0gTWF0aC5mbG9vcihkaWZmZXJTZWNvbmQgJSA2MCk7CiAgc2Vjb25kID0gc2Vjb25kID49IDEwID8gc2Vjb25kIDogJzAnICsgc2Vjb25kOwogIHJldHVybiB7CiAgICBkYXk6IGRheSwKICAgIGhvdXI6IGhvdXIsCiAgICBtaW51dGU6IG1pbnV0ZSwKICAgIHNlY29uZDogc2Vjb25kCiAgfTsKfTsKZXhwb3J0IHZhciBnZXRSYW5kb21JbnRJbmNsdXNpdmUgPSBmdW5jdGlvbiBnZXRSYW5kb21JbnRJbmNsdXNpdmUobWluLCBtYXgpIHsKICBtaW4gPSBNYXRoLmNlaWwobWluKTsKICBtYXggPSBNYXRoLmZsb29yKG1heCk7CiAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4gKyAxKSkgKyBtaW47IC8vIOWQq+acgOWkp+WAvO+8jOWQq+acgOWwj+WAvCAKfTs="},{"version":3,"sources":["/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/tools/tool.js"],"names":["formartTime","time","differSecond","day","Math","floor","hour","minute","second","getRandomIntInclusive","min","max","ceil","random"],"mappings":"AAAA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACjC;AACA,MAAIC,YAAY,GAAGD,IAAnB,CAFiC,CAGjC;;AACA,MAAIE,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,YAAY,IAAI,KAAK,EAAL,GAAU,EAAd,CAAvB,CAAV;AACAC,EAAAA,GAAG,GAAGA,GAAG,IAAI,EAAP,GAAYA,GAAZ,GAAkB,MAAMA,GAA9B,CALiC,CAMjC;;AACA,MAAIG,IAAI,GAAGF,IAAI,CAACC,KAAL,CAAWH,YAAY,IAAI,KAAK,EAAT,CAAZ,GAA2B,EAAtC,CAAX;AACAI,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAR,GAAaA,IAAb,GAAoB,MAAMA,IAAjC,CARiC,CASjC;;AACA,MAAIC,MAAM,GAAGH,IAAI,CAACC,KAAL,CAAWH,YAAY,GAAG,EAAf,GAAoB,EAA/B,CAAb;AACAK,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAV,GAAeA,MAAf,GAAwB,MAAMA,MAAvC,CAXiC,CAYjC;;AACA,MAAIC,MAAM,GAAGJ,IAAI,CAACC,KAAL,CAAWH,YAAY,GAAG,EAA1B,CAAb;AACAM,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAV,GAAeA,MAAf,GAAwB,MAAMA,MAAvC;AACA,SAAO;AACLL,IAAAA,GAAG,EAAEA,GADA;AAELG,IAAAA,IAAI,EAAEA,IAFD;AAGLC,IAAAA,MAAM,EAAEA,MAHH;AAILC,IAAAA,MAAM,EAAEA;AAJH,GAAP;AAMD,CArBI;AAuBP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC/CD,EAAAA,GAAG,GAAGN,IAAI,CAACQ,IAAL,CAAUF,GAAV,CAAN;AACAC,EAAAA,GAAG,GAAGP,IAAI,CAACC,KAAL,CAAWM,GAAX,CAAN;AACA,SAAOP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACS,MAAL,MAAiBF,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD,CAH+C,CAGU;AAC5D,CAJM","sourcesContent":["export const formartTime = (time) => {\n    // 2.得到两个时间之间的差值(秒)\n    let differSecond = time\n    // 3.利用相差的总秒数 / 每一天的秒数 = 相差的天数\n    let day = Math.floor(differSecond / (60 * 60 * 24))\n    day = day >= 10 ? day : '0' + day\n    // 4.利用相差的总秒数 / 小时 % 24;\n    let hour = Math.floor(differSecond / (60 * 60) % 24)\n    hour = hour >= 10 ? hour : '0' + hour\n    // 5.利用相差的总秒数 / 分钟 % 60;\n    let minute = Math.floor(differSecond / 60 % 60)\n    minute = minute >= 10 ? minute : '0' + minute\n    // 6.利用相差的总秒数 % 秒数\n    let second = Math.floor(differSecond % 60)\n    second = second >= 10 ? second : '0' + second\n    return {\n      day: day,\n      hour: hour,\n      minute: minute,\n      second: second\n    }\n  }\n\nexport const getRandomIntInclusive = (min, max) => {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    return Math.floor(Math.random() * (max - min + 1)) + min // 含最大值，含最小值 \n}"]}]}