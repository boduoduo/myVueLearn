{"remainingRequest":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/babel-loader/lib/index.js!/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/store/actions.js","dependencies":[{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/store/actions.js","mtime":1585554199904},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/cache-loader/dist/cjs.js","mtime":1584931130054},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/babel-loader/lib/index.js","mtime":1584931129970}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnBhcnNlLWludCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9Vc2Vycy9NYXhiL0Rlc2t0b3AvSFRNTDUvVnVlXHU1QjY2XHU0RTYwL2RheS0wMDQvbXlWdWVMZWFybi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvTWF4Yi9EZXNrdG9wL0hUTUw1L1Z1ZVx1NUI2Nlx1NEU2MC9kYXktMDA0L215VnVlTGVhcm4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgeyBTRVRfRlVMTF9TQ1JFRU4sIFNFVF9NSU5JX1BMQVlFUiwgU0VUX0lTX1BMQVlJTkcsIFNFVF9NT0RFX1RZUEUsIFNFVF9MSVNUX1BMQVlFUiwgU0VUX1NPTkdfREVUQUlMLCBTRVRfU09OR19MWVJJQywgU0VUX0RFTF9TT05HLCBTRVRfQ1VSUkVOVF9JTkRFWCwgU0VUX0NVUlJFTlRfUExBWV9USU1FLCBTRVRfRkFWT1JJVEVfU09ORywgU0VUX0ZBVk9SSVRFX0xJU1QsIFNFVF9ISVNUT1JZX1NPTkcgfSBmcm9tICcuL211dGF0aW9ucy10eXBlJzsKaW1wb3J0IHsgZ2V0U29uZ0RldGFpbCwgZ2V0U29uZ0x5cmljIGFzIF9nZXRTb25nTHlyaWMsIGdldFNvbmdVUkwgfSBmcm9tICcuLi9hcGkvaW5kZXgnOwpleHBvcnQgZGVmYXVsdCBfZGVmaW5lUHJvcGVydHkoewogIHNldEZ1bGxTY3JlZW46IGZ1bmN0aW9uIHNldEZ1bGxTY3JlZW4oX3JlZiwgZmxhZykgewogICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgY29tbWl0KFNFVF9GVUxMX1NDUkVFTiwgZmxhZyk7CiAgfSwKICBzZXRNaW5pUGxheWVyOiBmdW5jdGlvbiBzZXRNaW5pUGxheWVyKF9yZWYyLCBmbGFnKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgY29tbWl0KFNFVF9NSU5JX1BMQVlFUiwgZmxhZyk7CiAgfSwKICBzZXRJc1BsYXlpbmc6IGZ1bmN0aW9uIHNldElzUGxheWluZyhfcmVmMywgZmxhZykgewogICAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgIGNvbW1pdChTRVRfSVNfUExBWUlORywgZmxhZyk7CiAgfSwKICBzZXRNb2RlVHlwZTogZnVuY3Rpb24gc2V0TW9kZVR5cGUoX3JlZjQsIHR5cGUpIHsKICAgIHZhciBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICBjb21taXQoU0VUX01PREVfVFlQRSwgdHlwZSk7CiAgfSwKICBzZXRMaXN0UGxheWVyOiBmdW5jdGlvbiBzZXRMaXN0UGxheWVyKF9yZWY1LCBmbGFnKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjUuY29tbWl0OwogICAgY29tbWl0KFNFVF9MSVNUX1BMQVlFUiwgZmxhZyk7CiAgfSwKICBzZXRTb25nRGV0YWlsOiBmdW5jdGlvbiBzZXRTb25nRGV0YWlsKF9yZWY2LCBpZHMpIHsKICAgIHZhciBjb21taXQgPSBfcmVmNi5jb21taXQ7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcmVzdWx0LCB1cmxzLCBsaXN0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGdldFNvbmdEZXRhaWwoewogICAgICAgICAgICAgICAgaWRzOiBpZHMuam9pbignLCcpCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gZ2V0U29uZ1VSTCh7CiAgICAgICAgICAgICAgICBpZDogaWRzLmpvaW4oJywnKQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHVybHMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGxpc3QgPSBbXTsKICAgICAgICAgICAgICByZXN1bHQuc29uZ3MuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUsIGkpIHsKICAgICAgICAgICAgICAgIHZhciBvYmogPSB7fTsKICAgICAgICAgICAgICAgIG9iai5pZCA9IHZhbHVlLmlkOwogICAgICAgICAgICAgICAgb2JqLm5hbWUgPSB2YWx1ZS5uYW1lOyAvLyBvYmoudXJsID0gdXJscy5kYXRhW2ldLnVybAoKICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdXJscy5kYXRhLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICAgICAgICAgIHZhciBpdGVtID0gdXJscy5kYXRhW2pdOwoKICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0uaWQgPT09IHZhbHVlLmlkKSB7CiAgICAgICAgICAgICAgICAgICAgb2JqLnVybCA9IGl0ZW0udXJsOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgdmFyIHNpbmdlciA9ICcnOwogICAgICAgICAgICAgICAgdmFsdWVbJ2FyJ10uZm9yRWFjaChmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgaWYgKGluZGV4ID09IDApIHsKICAgICAgICAgICAgICAgICAgICBzaW5nZXIgPSBpdGVtLm5hbWU7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgc2luZ2VyICs9ICctJyArIGl0ZW0ubmFtZTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBvYmouc2luZ2VyID0gc2luZ2VyOwogICAgICAgICAgICAgICAgb2JqLnBpY1VybCA9IHZhbHVlWydhbCddLnBpY1VybDsKICAgICAgICAgICAgICAgIGxpc3QucHVzaChvYmopOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIGNvbW1pdChTRVRfU09OR19ERVRBSUwsIGxpc3QpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgZ2V0U29uZ0x5cmljOiBmdW5jdGlvbiBnZXRTb25nTHlyaWMoX3JlZjcsIGlkKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjcuY29tbWl0OwogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciByZXN1bHQsIG9iajsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIF9nZXRTb25nTHlyaWMoewogICAgICAgICAgICAgICAgaWQ6IGlkCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgb2JqID0gcGFyc2VMeXJpYyhyZXN1bHQubHJjLmx5cmljKTsKICAgICAgICAgICAgICBjb21taXQoU0VUX1NPTkdfTFlSSUMsIG9iaik7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9LAogIHNldERlbFNvbmc6IGZ1bmN0aW9uIHNldERlbFNvbmcoX3JlZjgsIGluZGV4KSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjguY29tbWl0OwogICAgY29tbWl0KFNFVF9ERUxfU09ORywgaW5kZXgpOwogIH0sCiAgc2V0Q3VycmVudEluZGV4OiBmdW5jdGlvbiBzZXRDdXJyZW50SW5kZXgoX3JlZjksIGluZGV4KSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjkuY29tbWl0OwogICAgY29tbWl0KFNFVF9DVVJSRU5UX0lOREVYLCBpbmRleCk7CiAgfSwKICBzZXRDdXJyZW50UGxheVRpbWU6IGZ1bmN0aW9uIHNldEN1cnJlbnRQbGF5VGltZShfcmVmMTAsIHRpbWUpIHsKICAgIHZhciBjb21taXQgPSBfcmVmMTAuY29tbWl0OwogICAgY29tbWl0KFNFVF9DVVJSRU5UX1BMQVlfVElNRSwgdGltZSk7CiAgfSwKICBzZXRGYXZvcml0ZVNvbmc6IGZ1bmN0aW9uIHNldEZhdm9yaXRlU29uZyhfcmVmMTEsIHNvbmcpIHsKICAgIHZhciBjb21taXQgPSBfcmVmMTEuY29tbWl0OwogICAgY29tbWl0KFNFVF9GQVZPUklURV9TT05HLCBzb25nKTsKICB9LAogIHNldEZhdm9yaXRlTGlzdDogZnVuY3Rpb24gc2V0RmF2b3JpdGVMaXN0KF9yZWYxMiwgbGlzdCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWYxMi5jb21taXQ7CiAgICBjb21taXQoU0VUX0ZBVk9SSVRFX0xJU1QsIGxpc3QpOwogIH0sCiAgc2V0SGlzdG9yeVNvbmc6IGZ1bmN0aW9uIHNldEhpc3RvcnlTb25nKF9yZWYxMywgc29uZykgewogICAgdmFyIGNvbW1pdCA9IF9yZWYxMy5jb21taXQ7CiAgICBjb21taXQoU0VUX0hJU1RPUllfU09ORywgc29uZyk7CiAgfQp9LCAic2V0SGlzdG9yeVNvbmciLCBmdW5jdGlvbiBzZXRIaXN0b3J5U29uZyhfcmVmMTQsIGxpc3QpIHsKICB2YXIgY29tbWl0ID0gX3JlZjE0LmNvbW1pdDsKICBjb21taXQoU0VUX0hJU1RPUllfU09ORywgc29uZyk7Cn0pOyAvLyDmoLzlvI/ljJbmrYzor43mlrnms5UKCmZ1bmN0aW9uIHBhcnNlTHlyaWMobHJjKSB7CiAgdmFyIGx5cmljcyA9IGxyYy5zcGxpdCgnXG4nKTsgLy8gWzAwOjAwLjAwMF0g5L2c5puyIDog5p6X5L+K5p2wCiAgLy8gMS7lrprkuYnmraPliJnooajovr7lvI/mj5Dlj5ZbMDA6MDAuMDAwXQoKICB2YXIgcmVnMSA9IC9cW1xkKjpcZCpcLlxkKlxdL2c7IC8vIDIu5a6a5LmJ5q2j5YiZ6KGo6L6+5byP5o+Q5Y+WIFswMAoKICB2YXIgcmVnMiA9IC9cW1xkKi9pOyAvLyAzLuWumuS5ieato+WImeihqOi+vuW8j+aPkOWPliA6MDAKCiAgdmFyIHJlZzMgPSAvXDpcZCovaTsgLy8gNC7lrprkuYnlr7nosaHkv53lrZjlpITnkIblpb3nmoTmrYzor40KCiAgdmFyIGx5cmljT2JqID0ge307CiAgbHlyaWNzLmZvckVhY2goZnVuY3Rpb24gKGx5cmljKSB7CiAgICAvLyAxLuaPkOWPluaXtumXtAogICAgdmFyIHRpbWVTdHIgPSBseXJpYy5tYXRjaChyZWcxKTsKCiAgICBpZiAoIXRpbWVTdHIpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRpbWVTdHIgPSB0aW1lU3RyWzBdOyAvLyAyLuaPkOWPluWIhumSnwoKICAgIHZhciBtaW5TdHIgPSB0aW1lU3RyLm1hdGNoKHJlZzIpWzBdLnN1YnN0cigxKTsgLy8gMy7mj5Dlj5bnp5Lpkp8KCiAgICB2YXIgc2Vjb25kU3RyID0gdGltZVN0ci5tYXRjaChyZWczKVswXS5zdWJzdHIoMSk7IC8vIDQu5ZCI5bm25pe26Ze0LCDlsIbliIbpkp/lkoznp5Lpkp/pg73lkIjlubbkuLrnp5Lpkp8KCiAgICB2YXIgdGltZSA9IHBhcnNlSW50KG1pblN0cikgKiA2MCArIHBhcnNlSW50KHNlY29uZFN0cik7IC8vIDUu5aSE55CG5q2M6K+NCgogICAgdmFyIHRleHQgPSBseXJpYy5yZXBsYWNlKHJlZzEsICcnKS50cmltKCk7IC8vIDYu5L+d5a2Y5pWw5o2uCgogICAgbHlyaWNPYmpbdGltZV0gPSB0ZXh0OwogIH0pOwogIHJldHVybiBseXJpY09iajsKfQ=="},{"version":3,"sources":["/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/store/actions.js"],"names":["SET_FULL_SCREEN","SET_MINI_PLAYER","SET_IS_PLAYING","SET_MODE_TYPE","SET_LIST_PLAYER","SET_SONG_DETAIL","SET_SONG_LYRIC","SET_DEL_SONG","SET_CURRENT_INDEX","SET_CURRENT_PLAY_TIME","SET_FAVORITE_SONG","SET_FAVORITE_LIST","SET_HISTORY_SONG","getSongDetail","getSongLyric","getSongURL","setFullScreen","flag","commit","setMiniPlayer","setIsPlaying","setModeType","type","setListPlayer","setSongDetail","ids","join","result","id","urls","list","songs","forEach","value","i","obj","name","j","data","length","item","url","singer","index","picUrl","push","parseLyric","lrc","lyric","setDelSong","setCurrentIndex","setCurrentPlayTime","time","setFavoriteSong","song","setFavoriteList","setHistorySong","lyrics","split","reg1","reg2","reg3","lyricObj","timeStr","match","minStr","substr","secondStr","parseInt","text","replace","trim"],"mappings":"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","sourcesContent":["import { \n    SET_FULL_SCREEN,\n    SET_MINI_PLAYER, \n    SET_IS_PLAYING, \n    SET_MODE_TYPE, \n    SET_LIST_PLAYER, \n    SET_SONG_DETAIL,\n    SET_SONG_LYRIC,\n    SET_DEL_SONG,\n    SET_CURRENT_INDEX,\n    SET_CURRENT_PLAY_TIME,\n    SET_FAVORITE_SONG,\n    SET_FAVORITE_LIST, \n    SET_HISTORY_SONG\n} from './mutations-type'\n\nimport { getSongDetail, getSongLyric, getSongURL } from '../api/index'\n\nexport default {\n    setFullScreen ({ commit }, flag) {\n        commit(SET_FULL_SCREEN, flag )\n    },\n\n    setMiniPlayer ({ commit }, flag) {\n        commit(SET_MINI_PLAYER, flag )\n    },\n\n    setIsPlaying ({ commit }, flag) {\n        commit(SET_IS_PLAYING, flag )\n    },\n\n    setModeType ({ commit }, type) {\n        commit(SET_MODE_TYPE, type)\n    },\n\n    setListPlayer ({ commit }, flag) {\n        commit(SET_LIST_PLAYER, flag)\n    },\n\n    async setSongDetail ({ commit }, ids) {\n        let result = await getSongDetail({ids: ids.join(',')})\n        let urls = await getSongURL({id: ids.join(',')})\n        let list = []\n        result.songs.forEach((value, i) => {\n            let obj = {}\n            obj.id = value.id\n            obj.name = value.name\n            // obj.url = urls.data[i].url\n            for (let j = 0; j < urls.data.length; j++) {\n                const item = urls.data[j]\n                if (item.id === value.id) {\n                    obj.url = item.url\n                    break;\n                }\n            }\n            let singer = ''\n            value['ar'].forEach((item, index) => {\n                if (index == 0) {\n                    singer = item.name\n                }else {\n                    singer += '-' + item.name\n                }\n            })\n            obj.singer = singer \n            obj.picUrl = value['al'].picUrl\n            list.push(obj)\n        })\n        commit(SET_SONG_DETAIL, list)\n    },\n\n    async getSongLyric ({ commit }, id) {\n        let result = await getSongLyric({id: id})\n        let obj = parseLyric(result.lrc.lyric)\n        commit(SET_SONG_LYRIC, obj)\n    },\n\n    setDelSong({ commit }, index) {\n        commit(SET_DEL_SONG, index)\n    },\n\n    \n    setCurrentIndex({ commit }, index) {\n        commit(SET_CURRENT_INDEX, index)\n    },\n\n    setCurrentPlayTime({ commit }, time) {\n        commit(SET_CURRENT_PLAY_TIME, time)\n    },\n\n    setFavoriteSong({ commit }, song) {\n        commit(SET_FAVORITE_SONG, song)\n    },\n\n    setFavoriteList({ commit }, list) {\n        commit(SET_FAVORITE_LIST, list)\n    },\n\n    setHistorySong({ commit }, song) {\n        commit(SET_HISTORY_SONG, song)\n    },\n\n    setHistorySong({ commit }, list) {\n        commit(SET_HISTORY_SONG, song)\n    },\n}\n\n// 格式化歌词方法\nfunction parseLyric (lrc) {\n    let lyrics = lrc.split('\\n')\n    // [00:00.000] 作曲 : 林俊杰\n    // 1.定义正则表达式提取[00:00.000]\n    let reg1 = /\\[\\d*:\\d*\\.\\d*\\]/g\n    // 2.定义正则表达式提取 [00\n    let reg2 = /\\[\\d*/i\n    // 3.定义正则表达式提取 :00\n    let reg3 = /\\:\\d*/i\n    // 4.定义对象保存处理好的歌词\n    let lyricObj = {}\n    lyrics.forEach(function (lyric) {\n      // 1.提取时间\n      let timeStr = lyric.match(reg1)\n      if (!timeStr) { return }\n      timeStr = timeStr[0]\n      // 2.提取分钟\n      let minStr = timeStr.match(reg2)[0].substr(1)\n      // 3.提取秒钟\n      let secondStr = timeStr.match(reg3)[0].substr(1)\n      // 4.合并时间, 将分钟和秒钟都合并为秒钟\n      let time = parseInt(minStr) * 60 + parseInt(secondStr)\n      // 5.处理歌词\n      let text = lyric.replace(reg1, '').trim()\n      // 6.保存数据\n      lyricObj[time] = text\n    })\n    return lyricObj\n}"]}]}