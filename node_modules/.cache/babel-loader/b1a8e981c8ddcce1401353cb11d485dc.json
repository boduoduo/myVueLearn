{"remainingRequest":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/babel-loader/lib/index.js!/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/store/actions.js","dependencies":[{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/store/actions.js","mtime":1585554215153},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/cache-loader/dist/cjs.js","mtime":1584931130054},{"path":"/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/node_modules/babel-loader/lib/index.js","mtime":1584931129970}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnBhcnNlLWludCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvTWF4Yi9EZXNrdG9wL0hUTUw1L1Z1ZVx1NUI2Nlx1NEU2MC9kYXktMDA0L215VnVlTGVhcm4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgeyBTRVRfRlVMTF9TQ1JFRU4sIFNFVF9NSU5JX1BMQVlFUiwgU0VUX0lTX1BMQVlJTkcsIFNFVF9NT0RFX1RZUEUsIFNFVF9MSVNUX1BMQVlFUiwgU0VUX1NPTkdfREVUQUlMLCBTRVRfU09OR19MWVJJQywgU0VUX0RFTF9TT05HLCBTRVRfQ1VSUkVOVF9JTkRFWCwgU0VUX0NVUlJFTlRfUExBWV9USU1FLCBTRVRfRkFWT1JJVEVfU09ORywgU0VUX0ZBVk9SSVRFX0xJU1QsIFNFVF9ISVNUT1JZX1NPTkcsIFNFVF9ISVNUT1JZX0xJU1QgfSBmcm9tICcuL211dGF0aW9ucy10eXBlJzsKaW1wb3J0IHsgZ2V0U29uZ0RldGFpbCwgZ2V0U29uZ0x5cmljIGFzIF9nZXRTb25nTHlyaWMsIGdldFNvbmdVUkwgfSBmcm9tICcuLi9hcGkvaW5kZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgc2V0RnVsbFNjcmVlbjogZnVuY3Rpb24gc2V0RnVsbFNjcmVlbihfcmVmLCBmbGFnKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICBjb21taXQoU0VUX0ZVTExfU0NSRUVOLCBmbGFnKTsKICB9LAogIHNldE1pbmlQbGF5ZXI6IGZ1bmN0aW9uIHNldE1pbmlQbGF5ZXIoX3JlZjIsIGZsYWcpIHsKICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICBjb21taXQoU0VUX01JTklfUExBWUVSLCBmbGFnKTsKICB9LAogIHNldElzUGxheWluZzogZnVuY3Rpb24gc2V0SXNQbGF5aW5nKF9yZWYzLCBmbGFnKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgY29tbWl0KFNFVF9JU19QTEFZSU5HLCBmbGFnKTsKICB9LAogIHNldE1vZGVUeXBlOiBmdW5jdGlvbiBzZXRNb2RlVHlwZShfcmVmNCwgdHlwZSkgewogICAgdmFyIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgIGNvbW1pdChTRVRfTU9ERV9UWVBFLCB0eXBlKTsKICB9LAogIHNldExpc3RQbGF5ZXI6IGZ1bmN0aW9uIHNldExpc3RQbGF5ZXIoX3JlZjUsIGZsYWcpIHsKICAgIHZhciBjb21taXQgPSBfcmVmNS5jb21taXQ7CiAgICBjb21taXQoU0VUX0xJU1RfUExBWUVSLCBmbGFnKTsKICB9LAogIHNldFNvbmdEZXRhaWw6IGZ1bmN0aW9uIHNldFNvbmdEZXRhaWwoX3JlZjYsIGlkcykgewogICAgdmFyIGNvbW1pdCA9IF9yZWY2LmNvbW1pdDsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciByZXN1bHQsIHVybHMsIGxpc3Q7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gZ2V0U29uZ0RldGFpbCh7CiAgICAgICAgICAgICAgICBpZHM6IGlkcy5qb2luKCcsJykKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBnZXRTb25nVVJMKHsKICAgICAgICAgICAgICAgIGlkOiBpZHMuam9pbignLCcpCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgdXJscyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgbGlzdCA9IFtdOwogICAgICAgICAgICAgIHJlc3VsdC5zb25ncy5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwgaSkgewogICAgICAgICAgICAgICAgdmFyIG9iaiA9IHt9OwogICAgICAgICAgICAgICAgb2JqLmlkID0gdmFsdWUuaWQ7CiAgICAgICAgICAgICAgICBvYmoubmFtZSA9IHZhbHVlLm5hbWU7IC8vIG9iai51cmwgPSB1cmxzLmRhdGFbaV0udXJsCgogICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB1cmxzLmRhdGEubGVuZ3RoOyBqKyspIHsKICAgICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSB1cmxzLmRhdGFbal07CgogICAgICAgICAgICAgICAgICBpZiAoaXRlbS5pZCA9PT0gdmFsdWUuaWQpIHsKICAgICAgICAgICAgICAgICAgICBvYmoudXJsID0gaXRlbS51cmw7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB2YXIgc2luZ2VyID0gJyc7CiAgICAgICAgICAgICAgICB2YWx1ZVsnYXInXS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgICAgICAgICAgICBpZiAoaW5kZXggPT0gMCkgewogICAgICAgICAgICAgICAgICAgIHNpbmdlciA9IGl0ZW0ubmFtZTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBzaW5nZXIgKz0gJy0nICsgaXRlbS5uYW1lOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIG9iai5zaW5nZXIgPSBzaW5nZXI7CiAgICAgICAgICAgICAgICBvYmoucGljVXJsID0gdmFsdWVbJ2FsJ10ucGljVXJsOwogICAgICAgICAgICAgICAgbGlzdC5wdXNoKG9iaik7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgY29tbWl0KFNFVF9TT05HX0RFVEFJTCwgbGlzdCk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBnZXRTb25nTHlyaWM6IGZ1bmN0aW9uIGdldFNvbmdMeXJpYyhfcmVmNywgaWQpIHsKICAgIHZhciBjb21taXQgPSBfcmVmNy5jb21taXQ7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIHJlc3VsdCwgb2JqOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gX2dldFNvbmdMeXJpYyh7CiAgICAgICAgICAgICAgICBpZDogaWQKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBvYmogPSBwYXJzZUx5cmljKHJlc3VsdC5scmMubHlyaWMpOwogICAgICAgICAgICAgIGNvbW1pdChTRVRfU09OR19MWVJJQywgb2JqKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgc2V0RGVsU29uZzogZnVuY3Rpb24gc2V0RGVsU29uZyhfcmVmOCwgaW5kZXgpIHsKICAgIHZhciBjb21taXQgPSBfcmVmOC5jb21taXQ7CiAgICBjb21taXQoU0VUX0RFTF9TT05HLCBpbmRleCk7CiAgfSwKICBzZXRDdXJyZW50SW5kZXg6IGZ1bmN0aW9uIHNldEN1cnJlbnRJbmRleChfcmVmOSwgaW5kZXgpIHsKICAgIHZhciBjb21taXQgPSBfcmVmOS5jb21taXQ7CiAgICBjb21taXQoU0VUX0NVUlJFTlRfSU5ERVgsIGluZGV4KTsKICB9LAogIHNldEN1cnJlbnRQbGF5VGltZTogZnVuY3Rpb24gc2V0Q3VycmVudFBsYXlUaW1lKF9yZWYxMCwgdGltZSkgewogICAgdmFyIGNvbW1pdCA9IF9yZWYxMC5jb21taXQ7CiAgICBjb21taXQoU0VUX0NVUlJFTlRfUExBWV9USU1FLCB0aW1lKTsKICB9LAogIHNldEZhdm9yaXRlU29uZzogZnVuY3Rpb24gc2V0RmF2b3JpdGVTb25nKF9yZWYxMSwgc29uZykgewogICAgdmFyIGNvbW1pdCA9IF9yZWYxMS5jb21taXQ7CiAgICBjb21taXQoU0VUX0ZBVk9SSVRFX1NPTkcsIHNvbmcpOwogIH0sCiAgc2V0RmF2b3JpdGVMaXN0OiBmdW5jdGlvbiBzZXRGYXZvcml0ZUxpc3QoX3JlZjEyLCBsaXN0KSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjEyLmNvbW1pdDsKICAgIGNvbW1pdChTRVRfRkFWT1JJVEVfTElTVCwgbGlzdCk7CiAgfSwKICBzZXRIaXN0b3J5U29uZzogZnVuY3Rpb24gc2V0SGlzdG9yeVNvbmcoX3JlZjEzLCBzb25nKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjEzLmNvbW1pdDsKICAgIGNvbW1pdChTRVRfSElTVE9SWV9TT05HLCBzb25nKTsKICB9LAogIHNldEhpc3RvcnlMaXN0OiBmdW5jdGlvbiBzZXRIaXN0b3J5TGlzdChfcmVmMTQsIGxpc3QpIHsKICAgIHZhciBjb21taXQgPSBfcmVmMTQuY29tbWl0OwogICAgY29tbWl0KFNFVF9ISVNUT1JZX0xJU1QsIGxpc3QpOwogIH0KfTsgLy8g5qC85byP5YyW5q2M6K+N5pa55rOVCgpmdW5jdGlvbiBwYXJzZUx5cmljKGxyYykgewogIHZhciBseXJpY3MgPSBscmMuc3BsaXQoJ1xuJyk7IC8vIFswMDowMC4wMDBdIOS9nOabsiA6IOael+S/iuadsAogIC8vIDEu5a6a5LmJ5q2j5YiZ6KGo6L6+5byP5o+Q5Y+WWzAwOjAwLjAwMF0KCiAgdmFyIHJlZzEgPSAvXFtcZCo6XGQqXC5cZCpcXS9nOyAvLyAyLuWumuS5ieato+WImeihqOi+vuW8j+aPkOWPliBbMDAKCiAgdmFyIHJlZzIgPSAvXFtcZCovaTsgLy8gMy7lrprkuYnmraPliJnooajovr7lvI/mj5Dlj5YgOjAwCgogIHZhciByZWczID0gL1w6XGQqL2k7IC8vIDQu5a6a5LmJ5a+56LGh5L+d5a2Y5aSE55CG5aW955qE5q2M6K+NCgogIHZhciBseXJpY09iaiA9IHt9OwogIGx5cmljcy5mb3JFYWNoKGZ1bmN0aW9uIChseXJpYykgewogICAgLy8gMS7mj5Dlj5bml7bpl7QKICAgIHZhciB0aW1lU3RyID0gbHlyaWMubWF0Y2gocmVnMSk7CgogICAgaWYgKCF0aW1lU3RyKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB0aW1lU3RyID0gdGltZVN0clswXTsgLy8gMi7mj5Dlj5bliIbpkp8KCiAgICB2YXIgbWluU3RyID0gdGltZVN0ci5tYXRjaChyZWcyKVswXS5zdWJzdHIoMSk7IC8vIDMu5o+Q5Y+W56eS6ZKfCgogICAgdmFyIHNlY29uZFN0ciA9IHRpbWVTdHIubWF0Y2gocmVnMylbMF0uc3Vic3RyKDEpOyAvLyA0LuWQiOW5tuaXtumXtCwg5bCG5YiG6ZKf5ZKM56eS6ZKf6YO95ZCI5bm25Li656eS6ZKfCgogICAgdmFyIHRpbWUgPSBwYXJzZUludChtaW5TdHIpICogNjAgKyBwYXJzZUludChzZWNvbmRTdHIpOyAvLyA1LuWkhOeQhuatjOivjQoKICAgIHZhciB0ZXh0ID0gbHlyaWMucmVwbGFjZShyZWcxLCAnJykudHJpbSgpOyAvLyA2LuS/neWtmOaVsOaNrgoKICAgIGx5cmljT2JqW3RpbWVdID0gdGV4dDsKICB9KTsKICByZXR1cm4gbHlyaWNPYmo7Cn0="},{"version":3,"sources":["/Users/Maxb/Desktop/HTML5/Vue学习/day-004/myVueLearn/src/store/actions.js"],"names":["SET_FULL_SCREEN","SET_MINI_PLAYER","SET_IS_PLAYING","SET_MODE_TYPE","SET_LIST_PLAYER","SET_SONG_DETAIL","SET_SONG_LYRIC","SET_DEL_SONG","SET_CURRENT_INDEX","SET_CURRENT_PLAY_TIME","SET_FAVORITE_SONG","SET_FAVORITE_LIST","SET_HISTORY_SONG","SET_HISTORY_LIST","getSongDetail","getSongLyric","getSongURL","setFullScreen","flag","commit","setMiniPlayer","setIsPlaying","setModeType","type","setListPlayer","setSongDetail","ids","join","result","id","urls","list","songs","forEach","value","i","obj","name","j","data","length","item","url","singer","index","picUrl","push","parseLyric","lrc","lyric","setDelSong","setCurrentIndex","setCurrentPlayTime","time","setFavoriteSong","song","setFavoriteList","setHistorySong","setHistoryList","lyrics","split","reg1","reg2","reg3","lyricObj","timeStr","match","minStr","substr","secondStr","parseInt","text","replace","trim"],"mappings":"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","sourcesContent":["import { \n    SET_FULL_SCREEN,\n    SET_MINI_PLAYER, \n    SET_IS_PLAYING, \n    SET_MODE_TYPE, \n    SET_LIST_PLAYER, \n    SET_SONG_DETAIL,\n    SET_SONG_LYRIC,\n    SET_DEL_SONG,\n    SET_CURRENT_INDEX,\n    SET_CURRENT_PLAY_TIME,\n    SET_FAVORITE_SONG,\n    SET_FAVORITE_LIST, \n    SET_HISTORY_SONG,\n    SET_HISTORY_LIST\n} from './mutations-type'\n\nimport { getSongDetail, getSongLyric, getSongURL } from '../api/index'\n\nexport default {\n    setFullScreen ({ commit }, flag) {\n        commit(SET_FULL_SCREEN, flag )\n    },\n\n    setMiniPlayer ({ commit }, flag) {\n        commit(SET_MINI_PLAYER, flag )\n    },\n\n    setIsPlaying ({ commit }, flag) {\n        commit(SET_IS_PLAYING, flag )\n    },\n\n    setModeType ({ commit }, type) {\n        commit(SET_MODE_TYPE, type)\n    },\n\n    setListPlayer ({ commit }, flag) {\n        commit(SET_LIST_PLAYER, flag)\n    },\n\n    async setSongDetail ({ commit }, ids) {\n        let result = await getSongDetail({ids: ids.join(',')})\n        let urls = await getSongURL({id: ids.join(',')})\n        let list = []\n        result.songs.forEach((value, i) => {\n            let obj = {}\n            obj.id = value.id\n            obj.name = value.name\n            // obj.url = urls.data[i].url\n            for (let j = 0; j < urls.data.length; j++) {\n                const item = urls.data[j]\n                if (item.id === value.id) {\n                    obj.url = item.url\n                    break;\n                }\n            }\n            let singer = ''\n            value['ar'].forEach((item, index) => {\n                if (index == 0) {\n                    singer = item.name\n                }else {\n                    singer += '-' + item.name\n                }\n            })\n            obj.singer = singer \n            obj.picUrl = value['al'].picUrl\n            list.push(obj)\n        })\n        commit(SET_SONG_DETAIL, list)\n    },\n\n    async getSongLyric ({ commit }, id) {\n        let result = await getSongLyric({id: id})\n        let obj = parseLyric(result.lrc.lyric)\n        commit(SET_SONG_LYRIC, obj)\n    },\n\n    setDelSong({ commit }, index) {\n        commit(SET_DEL_SONG, index)\n    },\n\n    \n    setCurrentIndex({ commit }, index) {\n        commit(SET_CURRENT_INDEX, index)\n    },\n\n    setCurrentPlayTime({ commit }, time) {\n        commit(SET_CURRENT_PLAY_TIME, time)\n    },\n\n    setFavoriteSong({ commit }, song) {\n        commit(SET_FAVORITE_SONG, song)\n    },\n\n    setFavoriteList({ commit }, list) {\n        commit(SET_FAVORITE_LIST, list)\n    },\n\n    setHistorySong({ commit }, song) {\n        commit(SET_HISTORY_SONG, song)\n    },\n\n    setHistoryList({ commit }, list) {\n        commit(SET_HISTORY_LIST, list)\n    },\n}\n\n// 格式化歌词方法\nfunction parseLyric (lrc) {\n    let lyrics = lrc.split('\\n')\n    // [00:00.000] 作曲 : 林俊杰\n    // 1.定义正则表达式提取[00:00.000]\n    let reg1 = /\\[\\d*:\\d*\\.\\d*\\]/g\n    // 2.定义正则表达式提取 [00\n    let reg2 = /\\[\\d*/i\n    // 3.定义正则表达式提取 :00\n    let reg3 = /\\:\\d*/i\n    // 4.定义对象保存处理好的歌词\n    let lyricObj = {}\n    lyrics.forEach(function (lyric) {\n      // 1.提取时间\n      let timeStr = lyric.match(reg1)\n      if (!timeStr) { return }\n      timeStr = timeStr[0]\n      // 2.提取分钟\n      let minStr = timeStr.match(reg2)[0].substr(1)\n      // 3.提取秒钟\n      let secondStr = timeStr.match(reg3)[0].substr(1)\n      // 4.合并时间, 将分钟和秒钟都合并为秒钟\n      let time = parseInt(minStr) * 60 + parseInt(secondStr)\n      // 5.处理歌词\n      let text = lyric.replace(reg1, '').trim()\n      // 6.保存数据\n      lyricObj[time] = text\n    })\n    return lyricObj\n}"]}]}